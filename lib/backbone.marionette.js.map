{"version":3,"file":"backbone.marionette.js","sources":["src/utils/proxy.js","src/utils/extend.js","src/utils/deprecate.js","src/common/is-node-attached.js","src/common/merge-options.js","src/common/get-option.js","src/common/normalize-methods.js","src/common/trigger-method.js","src/common/monitor-view-events.js","src/error.js","src/common/bind-events.js","src/common/bind-requests.js","src/utils/set-options.js","src/mixins/common.js","src/mixins/radio.js","src/object.js","src/mixins/dom.js","src/template-cache.js","src/utils/invoke.js","src/mixins/behaviors.js","src/mixins/delegate-entity-events.js","src/utils/get-unique-event-name.js","src/config/features.js","src/mixins/triggers.js","src/mixins/ui.js","src/mixins/view.js","src/utils/destroy-backbone-view.js","src/region.js","src/common/build-region.js","src/mixins/regions.js","src/config/renderer.js","src/view.js","src/utils/emulate-collection.js","src/child-view-container.js","src/collection-view.js","src/composite-view.js","src/behavior.js","src/application.js","src/app-router.js","src/config/behaviors-lookup.js","src/backbone.marionette.js"],"sourcesContent":["//Internal utility for creating context style global utils\r\nconst proxy = function(method) {\r\n  return function(context, ...args) {\r\n    return method.apply(context, args);\r\n  };\r\n};\r\n\r\nexport default proxy;\r\n","// Marionette.extend\r\n// -----------------\r\n\r\nimport Backbone from 'backbone';\r\n\r\n// Borrow the Backbone `extend` method so we can use it as needed\r\nconst extend = Backbone.Model.extend;\r\n\r\nexport default extend;\r\n","/* global console */\r\n\r\nimport _ from 'underscore';\r\n\r\nimport Marionette from '../backbone.marionette';\r\n\r\nconst deprecate = function(message, test) {\r\n  if (_.isObject(message)) {\r\n    message = (\r\n      message.prev + ' is going to be removed in the future. ' +\r\n      'Please use ' + message.next + ' instead.' +\r\n      (message.url ? ' See: ' + message.url : '')\r\n    );\r\n  }\r\n\r\n  if (!Marionette.DEV_MODE) {\r\n    return;\r\n  }\r\n\r\n  if ((test === undefined || !test) && !deprecate._cache[message]) {\r\n    deprecate._warn('Deprecation warning: ' + message);\r\n    deprecate._cache[message] = true;\r\n  }\r\n};\r\n\r\ndeprecate._console = typeof console !== 'undefined' ? console : {};\r\ndeprecate._warn = function() {\r\n  const warn = deprecate._console.warn || deprecate._console.log || _.noop;\r\n  return warn.apply(deprecate._console, arguments);\r\n};\r\ndeprecate._cache = {};\r\n\r\nexport default deprecate;\r\n","// Marionette.isNodeAttached\r\n// -------------------------\r\n\r\n// Determine if `el` is a child of the document\r\nconst isNodeAttached = function(el) {\r\n  return document.documentElement.contains(el && el.parentNode);\r\n};\r\n\r\nexport default isNodeAttached;\r\n","import _ from 'underscore';\r\n\r\n// Merge `keys` from `options` onto `this`\r\nconst mergeOptions = function(options, keys) {\r\n  if (!options) { return; }\r\n\r\n  _.each(keys, (key) => {\r\n    const option = options[key];\r\n    if (option !== undefined) {\r\n      this[key] = option;\r\n    }\r\n  });\r\n};\r\n\r\nexport default mergeOptions;\r\n","// Marionette.getOption\r\n// --------------------\r\n\r\n// Retrieve an object, function or other value from the\r\n// object or its `options`, with `options` taking precedence.\r\nconst getOption = function(optionName) {\r\n  if (!optionName) { return; }\r\n  if (this.options && (this.options[optionName] !== undefined)) {\r\n    return this.options[optionName];\r\n  } else {\r\n    return this[optionName];\r\n  }\r\n};\r\n\r\nexport default getOption;\r\n","import _ from 'underscore';\r\n\r\n// Marionette.normalizeMethods\r\n// ----------------------\r\n\r\n// Pass in a mapping of events => functions or function names\r\n// and return a mapping of events => functions\r\nconst normalizeMethods = function(hash) {\r\n  return _.reduce(hash, (normalizedHash, method, name) => {\r\n    if (!_.isFunction(method)) {\r\n      method = this[method];\r\n    }\r\n    if (method) {\r\n      normalizedHash[name] = method;\r\n    }\r\n    return normalizedHash;\r\n  }, {});\r\n};\r\n\r\nexport default normalizeMethods;\r\n","// Trigger Method\r\n// --------------\r\n\r\nimport _ from 'underscore';\r\nimport getOption from './get-option';\r\n\r\n// split the event name on the \":\"\r\nconst splitter = /(^|:)(\\w)/gi;\r\n\r\n// take the event section (\"section1:section2:section3\")\r\n// and turn it in to uppercase name onSection1Section2Section3\r\nfunction getEventName(match, prefix, eventName) {\r\n  return eventName.toUpperCase();\r\n}\r\n\r\nconst getOnMethodName = _.memoize(function(event) {\r\n  return 'on' + event.replace(splitter, getEventName);\r\n});\r\n\r\n// Trigger an event and/or a corresponding method name. Examples:\r\n//\r\n// `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\r\n// call the \"onFoo\" method.\r\n//\r\n// `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\r\n// call the \"onFooBar\" method.\r\nexport function triggerMethod(event, ...args) {\r\n  // get the method name from the event name\r\n  const methodName = getOnMethodName(event);\r\n  const method = getOption.call(this, methodName);\r\n  let result;\r\n\r\n  // call the onMethodName if it exists\r\n  if (_.isFunction(method)) {\r\n    // pass all args, except the event name\r\n    result = method.apply(this, args);\r\n  }\r\n\r\n  // trigger the event\r\n  this.trigger.apply(this, arguments);\r\n\r\n  return result;\r\n}\r\n\r\n// triggerMethodOn invokes triggerMethod on a specific context\r\n//\r\n// e.g. `Marionette.triggerMethodOn(view, 'show')`\r\n// will trigger a \"show\" event or invoke onShow the view.\r\nexport function triggerMethodOn(context, ...args) {\r\n  if (_.isFunction(context.triggerMethod)) {\r\n    return context.triggerMethod.apply(context, args);\r\n  }\r\n\r\n  return triggerMethod.apply(context, args);\r\n}\r\n","// DOM Refresh\r\n// -----------\r\n\r\nimport _ from 'underscore';\r\nimport { triggerMethodOn } from './trigger-method';\r\n\r\n// Trigger method on children unless a pure Backbone.View\r\nfunction triggerMethodChildren(view, event, shouldTrigger) {\r\n  if (!view._getImmediateChildren) { return; }\r\n  _.each(view._getImmediateChildren(), child => {\r\n    if (!shouldTrigger(child)) { return; }\r\n    triggerMethodOn(child, event, child);\r\n  });\r\n}\r\n\r\nfunction shouldTriggerAttach(view) {\r\n  return !view._isAttached;\r\n}\r\n\r\nfunction shouldAttach(view) {\r\n  if (!shouldTriggerAttach(view)) { return false; }\r\n  view._isAttached = true;\r\n  return true;\r\n}\r\n\r\nfunction shouldTriggerDetach(view) {\r\n  return view._isAttached;\r\n}\r\n\r\nfunction shouldDetach(view) {\r\n  if (!shouldTriggerDetach(view)) { return false; }\r\n  view._isAttached = false;\r\n  return true;\r\n}\r\n\r\nfunction triggerDOMRefresh(view) {\r\n  if (view._isAttached && view._isRendered) {\r\n    triggerMethodOn(view, 'dom:refresh', view);\r\n  }\r\n}\r\n\r\nfunction handleBeforeAttach() {\r\n  triggerMethodChildren(this, 'before:attach', shouldTriggerAttach);\r\n}\r\n\r\nfunction handleAttach() {\r\n  triggerMethodChildren(this, 'attach', shouldAttach);\r\n  triggerDOMRefresh(this);\r\n}\r\n\r\nfunction handleBeforeDetach() {\r\n  triggerMethodChildren(this, 'before:detach', shouldTriggerDetach);\r\n}\r\n\r\nfunction handleDetach() {\r\n  triggerMethodChildren(this, 'detach', shouldDetach);\r\n}\r\n\r\nfunction handleRender() {\r\n  triggerDOMRefresh(this);\r\n}\r\n\r\n// Monitor a view's state, propagating attach/detach events to children and firing dom:refresh\r\n// whenever a rendered view is attached or an attached view is rendered.\r\nfunction monitorViewEvents(view) {\r\n  if (view._areViewEventsMonitored) { return; }\r\n\r\n  view._areViewEventsMonitored = true;\r\n\r\n  view.on({\r\n    'before:attach': handleBeforeAttach,\r\n    'attach': handleAttach,\r\n    'before:detach': handleBeforeDetach,\r\n    'detach': handleDetach,\r\n    'render': handleRender\r\n  });\r\n}\r\n\r\nexport default monitorViewEvents;\r\n","// Error\r\n// -----\r\n\r\nimport _ from 'underscore';\r\nimport extend from './utils/extend';\r\nimport {version} from '../package.json';\r\n\r\nconst errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number'];\r\n\r\nconst MarionetteError = extend.call(Error, {\r\n  urlRoot: `http://marionettejs.com/docs/v${version}/`,\r\n\r\n  constructor(message, options) {\r\n    if (_.isObject(message)) {\r\n      options = message;\r\n      message = options.message;\r\n    } else if (!options) {\r\n      options = {};\r\n    }\r\n\r\n    const error = Error.call(this, message);\r\n    _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));\r\n\r\n    this.captureStackTrace();\r\n\r\n    if (options.url) {\r\n      this.url = this.urlRoot + options.url;\r\n    }\r\n  },\r\n\r\n  captureStackTrace() {\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, MarionetteError);\r\n    }\r\n  },\r\n\r\n  toString() {\r\n    return this.name + ': ' + this.message + (this.url ? ' See: ' + this.url : '');\r\n  }\r\n});\r\n\r\nMarionetteError.extend = extend;\r\n\r\nexport default MarionetteError;\r\n","// Bind Entity Events & Unbind Entity Events\r\n// -----------------------------------------\r\n//\r\n// These methods are used to bind/unbind a backbone \"entity\" (e.g. collection/model)\r\n// to methods on a target object.\r\n//\r\n// The first parameter, `target`, must have the Backbone.Events module mixed in.\r\n//\r\n// The second parameter is the `entity` (Backbone.Model, Backbone.Collection or\r\n// any object that has Backbone.Events mixed in) to bind the events from.\r\n//\r\n// The third parameter is a hash of { \"event:name\": \"eventHandler\" }\r\n// configuration. Multiple handlers can be separated by a space. A\r\n// function can be supplied instead of a string handler name.\r\n\r\nimport _ from 'underscore';\r\nimport MarionetteError from '../error';\r\n\r\n// Bind/unbind the event to handlers specified as a string of\r\n// handler names on the target object\r\nfunction bindFromStrings(target, entity, evt, methods, actionName) {\r\n  const methodNames = methods.split(/\\s+/);\r\n\r\n  _.each(methodNames, function(methodName) {\r\n    const method = target[methodName];\r\n    if (!method) {\r\n      throw new MarionetteError(`Method \"${methodName}\" was configured as an event handler, but does not exist.`);\r\n    }\r\n\r\n    target[actionName](entity, evt, method);\r\n  });\r\n}\r\n\r\n// generic looping function\r\nfunction iterateEvents(target, entity, bindings, actionName) {\r\n  if (!entity || !bindings) { return; }\r\n\r\n  // type-check bindings\r\n  if (!_.isObject(bindings)) {\r\n    throw new MarionetteError({\r\n      message: 'Bindings must be an object.',\r\n      url: 'marionette.functions.html#marionettebindevents'\r\n    });\r\n  }\r\n\r\n  // iterate the bindings and bind/unbind them\r\n  _.each(bindings, function(method, evt) {\r\n\r\n    // allow for a list of method names as a string\r\n    if (_.isString(method)) {\r\n      bindFromStrings(target, entity, evt, method, actionName);\r\n      return;\r\n    }\r\n\r\n    target[actionName](entity, evt, method);\r\n  });\r\n}\r\n\r\nfunction bindEvents(entity, bindings) {\r\n  iterateEvents(this, entity, bindings, 'listenTo');\r\n  return this;\r\n}\r\n\r\nfunction unbindEvents(entity, bindings) {\r\n  iterateEvents(this, entity, bindings, 'stopListening');\r\n  return this;\r\n}\r\n\r\n// Export Public API\r\nexport {\r\n  bindEvents,\r\n  unbindEvents\r\n};\r\n","// Bind/Unbind Radio Requests\r\n// -----------------------------------------\r\n//\r\n// These methods are used to bind/unbind a backbone.radio request\r\n// to methods on a target object.\r\n//\r\n// The first parameter, `target`, will set the context of the reply method\r\n//\r\n// The second parameter is the `Radio.channel` to bind the reply to.\r\n//\r\n// The third parameter is a hash of { \"request:name\": \"replyHandler\" }\r\n// configuration. A function can be supplied instead of a string handler name.\r\n\r\nimport _ from 'underscore';\r\nimport normalizeMethods from './normalize-methods';\r\nimport MarionetteError from '../error';\r\n\r\nfunction iterateReplies(target, channel, bindings, actionName) {\r\n  if (!channel || !bindings) { return; }\r\n\r\n  // type-check bindings\r\n  if (!_.isObject(bindings)) {\r\n    throw new MarionetteError({\r\n      message: 'Bindings must be an object.',\r\n      url: 'marionette.functions.html#marionettebindrequests'\r\n    });\r\n  }\r\n\r\n  const normalizedRadioRequests = normalizeMethods.call(target, bindings);\r\n\r\n  channel[actionName](normalizedRadioRequests, target);\r\n}\r\n\r\nfunction bindRequests(channel, bindings) {\r\n  iterateReplies(this, channel, bindings, 'reply');\r\n  return this;\r\n}\r\n\r\nfunction unbindRequests(channel, bindings) {\r\n  iterateReplies(this, channel, bindings, 'stopReplying');\r\n  return this;\r\n}\r\n\r\nexport {\r\n  bindRequests,\r\n  unbindRequests\r\n};\r\n","import _ from 'underscore';\r\n\r\n// Internal utility for setting options consistently across Mn\r\nconst setOptions = function(...args) {\r\n  this.options = _.extend({}, _.result(this, 'options'), ...args);\r\n};\r\n\r\nexport default setOptions;\r\n","import _setOptions from '../utils/set-options';\r\nimport getOption from '../common/get-option';\r\nimport mergeOptions from '../common/merge-options';\r\nimport normalizeMethods from '../common/normalize-methods';\r\nimport {\r\n  bindEvents,\r\n  unbindEvents\r\n} from '../common/bind-events';\r\n\r\nexport default {\r\n\r\n  // Imports the \"normalizeMethods\" to transform hashes of\r\n  // events=>function references/names to a hash of events=>function references\r\n  normalizeMethods: normalizeMethods,\r\n\r\n  _setOptions: _setOptions,\r\n\r\n  // A handy way to merge passed-in options onto the instance\r\n  mergeOptions: mergeOptions,\r\n\r\n  // Enable getting options from this or this.options by name.\r\n  getOption: getOption,\r\n\r\n  // Enable binding view's events from another entity.\r\n  bindEvents: bindEvents,\r\n\r\n  // Enable unbinding view's events from another entity.\r\n  unbindEvents: unbindEvents\r\n};\r\n","import _ from 'underscore';\r\nimport Radio from 'backbone.radio';\r\n\r\nimport {\r\n  bindRequests,\r\n  unbindRequests\r\n} from '../common/bind-requests';\r\n\r\nimport {\r\n  bindEvents,\r\n  unbindEvents\r\n} from '../common/bind-events';\r\n\r\nimport MarionetteError from '../error';\r\n\r\n// MixinOptions\r\n// - channelName\r\n// - radioEvents\r\n// - radioRequests\r\n\r\nexport default {\r\n\r\n  _initRadio() {\r\n    const channelName = _.result(this, 'channelName');\r\n\r\n    if (!channelName) {\r\n      return;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Radio) {\r\n      throw new MarionetteError({\r\n        name: 'BackboneRadioMissing',\r\n        message: 'The dependency \"backbone.radio\" is missing.'\r\n      });\r\n    }\r\n\r\n    const channel = this._channel = Radio.channel(channelName);\r\n\r\n    const radioEvents = _.result(this, 'radioEvents');\r\n    this.bindEvents(channel, radioEvents);\r\n\r\n    const radioRequests = _.result(this, 'radioRequests');\r\n    this.bindRequests(channel, radioRequests);\r\n\r\n    this.on('destroy', this._destroyRadio);\r\n  },\r\n\r\n  _destroyRadio() {\r\n    this._channel.stopReplying(null, null, this);\r\n  },\r\n\r\n  getChannel() {\r\n    return this._channel;\r\n  },\r\n\r\n  // Proxy `bindEvents`\r\n  bindEvents: bindEvents,\r\n\r\n  // Proxy `unbindEvents`\r\n  unbindEvents: unbindEvents,\r\n\r\n  // Proxy `bindRequests`\r\n  bindRequests: bindRequests,\r\n\r\n  // Proxy `unbindRequests`\r\n  unbindRequests: unbindRequests\r\n\r\n};\r\n","// Object\r\n// ------\r\n\r\nimport _ from 'underscore';\r\nimport Backbone from 'backbone';\r\nimport extend from './utils/extend';\r\nimport { triggerMethod } from './common/trigger-method';\r\nimport CommonMixin from './mixins/common';\r\nimport RadioMixin from './mixins/radio';\r\n\r\nconst ClassOptions = [\r\n  'channelName',\r\n  'radioEvents',\r\n  'radioRequests'\r\n];\r\n\r\n// A Base Class that other Classes should descend from.\r\n// Object borrows many conventions and utilities from Backbone.\r\nconst MarionetteObject = function(options) {\r\n  this._setOptions(options);\r\n  this.mergeOptions(options, ClassOptions);\r\n  this.cid = _.uniqueId(this.cidPrefix);\r\n  this._initRadio();\r\n  this.initialize.apply(this, arguments);\r\n};\r\n\r\nMarionetteObject.extend = extend;\r\n\r\n// Object Methods\r\n// --------------\r\n\r\n// Ensure it can trigger events with Backbone.Events\r\n_.extend(MarionetteObject.prototype, Backbone.Events, CommonMixin, RadioMixin, {\r\n  cidPrefix: 'mno',\r\n\r\n  // for parity with Marionette.AbstractView lifecyle\r\n  _isDestroyed: false,\r\n\r\n  isDestroyed() {\r\n    return this._isDestroyed;\r\n  },\r\n\r\n  //this is a noop method intended to be overridden by classes that extend from this base\r\n  initialize() {},\r\n\r\n  destroy(...args) {\r\n    if (this._isDestroyed) { return this; }\r\n\r\n    this.triggerMethod('before:destroy', this, ...args);\r\n\r\n    this._isDestroyed = true;\r\n    this.triggerMethod('destroy', this, ...args);\r\n    this.stopListening();\r\n\r\n    return this;\r\n  },\r\n\r\n  triggerMethod: triggerMethod\r\n});\r\n\r\nexport default MarionetteObject;\r\n","// DomMixin\r\n//  ---------\r\n\r\nimport Backbone from 'backbone';\r\n\r\nexport default {\r\n  createBuffer() {\r\n    return document.createDocumentFragment();\r\n  },\r\n\r\n  appendChildren(el, children) {\r\n    Backbone.$(el).append(children);\r\n  },\r\n\r\n  beforeEl(el, sibling) {\r\n    Backbone.$(el).before(sibling);\r\n  },\r\n\r\n  replaceEl(newEl, oldEl) {\r\n    if (newEl === oldEl) {\r\n      return;\r\n    }\r\n\r\n    const parent = oldEl.parentNode;\r\n\r\n    if (!parent) {\r\n      return;\r\n    }\r\n\r\n    parent.replaceChild(newEl, oldEl);\r\n  },\r\n\r\n  detachContents(el) {\r\n    Backbone.$(el).contents().detach();\r\n  },\r\n\r\n  setInnerContent(el, html) {\r\n    Backbone.$(el).html(html);\r\n  },\r\n\r\n  removeEl(el) {\r\n    Backbone.$(el).remove();\r\n  },\r\n\r\n  findEls(selector, context) {\r\n    return Backbone.$(selector, context);\r\n  }\r\n};\r\n","// Template Cache\r\n// --------------\r\n\r\nimport _ from 'underscore';\r\nimport DomMixin from './mixins/dom';\r\nimport MarionetteError from './error';\r\n\r\n// Manage templates stored in `<script>` blocks,\r\n// caching them for faster access.\r\nconst TemplateCache = function(templateId) {\r\n  this.templateId = templateId;\r\n};\r\n\r\n// TemplateCache object-level methods. Manage the template\r\n// caches from these method calls instead of creating\r\n// your own TemplateCache instances\r\n_.extend(TemplateCache, {\r\n  templateCaches: {},\r\n\r\n  // Get the specified template by id. Either\r\n  // retrieves the cached version, or loads it\r\n  // from the DOM.\r\n  get(templateId, options) {\r\n    let cachedTemplate = this.templateCaches[templateId];\r\n\r\n    if (!cachedTemplate) {\r\n      cachedTemplate = new TemplateCache(templateId);\r\n      this.templateCaches[templateId] = cachedTemplate;\r\n    }\r\n\r\n    return cachedTemplate.load(options);\r\n  },\r\n\r\n  // Clear templates from the cache. If no arguments\r\n  // are specified, clears all templates:\r\n  // `clear()`\r\n  //\r\n  // If arguments are specified, clears each of the\r\n  // specified templates from the cache:\r\n  // `clear(\"#t1\", \"#t2\", \"...\")`\r\n  clear(...args) {\r\n    let i;\r\n    const length = args.length;\r\n\r\n    if (length > 0) {\r\n      for (i = 0; i < length; i++) {\r\n        delete this.templateCaches[args[i]];\r\n      }\r\n    } else {\r\n      this.templateCaches = {};\r\n    }\r\n  }\r\n});\r\n\r\n// TemplateCache instance methods, allowing each\r\n// template cache object to manage its own state\r\n// and know whether or not it has been loaded\r\n_.extend(TemplateCache.prototype, DomMixin, {\r\n\r\n  // Internal method to load the template\r\n  load(options) {\r\n    // Guard clause to prevent loading this template more than once\r\n    if (this.compiledTemplate) {\r\n      return this.compiledTemplate;\r\n    }\r\n\r\n    // Load the template and compile it\r\n    const template = this.loadTemplate(this.templateId, options);\r\n    this.compiledTemplate = this.compileTemplate(template, options);\r\n\r\n    return this.compiledTemplate;\r\n  },\r\n\r\n  // Load a template from the DOM, by default. Override\r\n  // this method to provide your own template retrieval\r\n  // For asynchronous loading with AMD/RequireJS, consider\r\n  // using a template-loader plugin as described here:\r\n  // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs\r\n  loadTemplate(templateId, options) {\r\n    const $template = this.findEls(templateId);\r\n\r\n    if (!$template.length) {\r\n      throw new MarionetteError({\r\n        name: 'NoTemplateError',\r\n        message: `Could not find template: \"${templateId}\"`\r\n      });\r\n    }\r\n    return $template.html();\r\n  },\r\n\r\n  // Pre-compile the template before caching it. Override\r\n  // this method if you do not need to pre-compile a template\r\n  // (JST / RequireJS for example) or if you want to change\r\n  // the template engine used (Handebars, etc).\r\n  compileTemplate(rawTemplate, options) {\r\n    return _.template(rawTemplate, options);\r\n  }\r\n});\r\n\r\nexport default TemplateCache;\r\n","// Implementation of the invoke method (http://underscorejs.org/#invoke) with support for\r\n// lodash v3, v4, and underscore.js\r\nimport _ from 'underscore';\r\n\r\nexport default _.invokeMap || _.invoke;\r\n","import _ from 'underscore';\r\nimport _invoke from '../utils/invoke';\r\nimport { triggerMethod } from '../common/trigger-method';\r\nimport Marionette from '../backbone.marionette';\r\n\r\n// MixinOptions\r\n// - behaviors\r\n\r\n// Takes care of getting the behavior class\r\n// given options and a key.\r\n// If a user passes in options.behaviorClass\r\n// default to using that.\r\n// If a user passes in a Behavior Class directly, use that\r\n// Otherwise delegate the lookup to the users `behaviorsLookup` implementation.\r\nfunction getBehaviorClass(options, key) {\r\n  if (options.behaviorClass) {\r\n    return options.behaviorClass;\r\n    //treat functions as a Behavior constructor\r\n  } else if (_.isFunction(options)) {\r\n    return options;\r\n  }\r\n\r\n  // behaviorsLookup can be either a flat object or a method\r\n  if (_.isFunction(Marionette.Behaviors.behaviorsLookup)) {\r\n    return Marionette.Behaviors.behaviorsLookup(options, key)[key];\r\n  }\r\n\r\n  return Marionette.Behaviors.behaviorsLookup[key];\r\n}\r\n\r\n// Iterate over the behaviors object, for each behavior\r\n// instantiate it and get its grouped behaviors.\r\n// This accepts a list of behaviors in either an object or array form\r\nfunction parseBehaviors(view, behaviors) {\r\n  return _.chain(behaviors).map(function(options, key) {\r\n    const BehaviorClass = getBehaviorClass(options, key);\r\n    //if we're passed a class directly instead of an object\r\n    const _options = options === BehaviorClass ? {} : options;\r\n    const behavior = new BehaviorClass(_options, view);\r\n    const nestedBehaviors = parseBehaviors(view, _.result(behavior, 'behaviors'));\r\n\r\n    return [behavior].concat(nestedBehaviors);\r\n  }).flatten().value();\r\n}\r\n\r\nexport default {\r\n  _initBehaviors() {\r\n    this._behaviors = this._getBehaviors();\r\n  },\r\n\r\n  _getBehaviors() {\r\n    const behaviors = _.result(this, 'behaviors');\r\n\r\n    // Behaviors defined on a view can be a flat object literal\r\n    // or it can be a function that returns an object.\r\n    return _.isObject(behaviors) ? parseBehaviors(this, behaviors) : {};\r\n  },\r\n\r\n  _getBehaviorTriggers() {\r\n    const triggers = _invoke(this._behaviors, 'getTriggers');\r\n    return _.extend({}, ...triggers);\r\n  },\r\n\r\n  _getBehaviorEvents() {\r\n    const events = _invoke(this._behaviors, 'getEvents');\r\n    return _.extend({}, ...events);\r\n  },\r\n\r\n  // proxy behavior $el to the view's $el.\r\n  _proxyBehaviorViewProperties() {\r\n    _invoke(this._behaviors, 'proxyViewProperties');\r\n  },\r\n\r\n  // delegate modelEvents and collectionEvents\r\n  _delegateBehaviorEntityEvents() {\r\n    _invoke(this._behaviors, 'delegateEntityEvents');\r\n  },\r\n\r\n  // undelegate modelEvents and collectionEvents\r\n  _undelegateBehaviorEntityEvents() {\r\n    _invoke(this._behaviors, 'undelegateEntityEvents');\r\n  },\r\n\r\n  _destroyBehaviors(args) {\r\n    // Call destroy on each behavior after\r\n    // destroying the view.\r\n    // This unbinds event listeners\r\n    // that behaviors have registered for.\r\n    _invoke(this._behaviors, 'destroy', ...args);\r\n  },\r\n\r\n  _bindBehaviorUIElements() {\r\n    _invoke(this._behaviors, 'bindUIElements');\r\n  },\r\n\r\n  _unbindBehaviorUIElements() {\r\n    _invoke(this._behaviors, 'unbindUIElements');\r\n  },\r\n\r\n  _triggerEventOnBehaviors() {\r\n    const behaviors = this._behaviors;\r\n    // Use good ol' for as this is a very hot function\r\n    for (let i = 0, length = behaviors && behaviors.length; i < length; i++) {\r\n      triggerMethod.apply(behaviors[i], arguments);\r\n    }\r\n  }\r\n};\r\n","import _ from 'underscore';\r\n\r\nimport {\r\n  bindEvents,\r\n  unbindEvents\r\n} from '../common/bind-events';\r\n\r\n// MixinOptions\r\n// - collectionEvents\r\n// - modelEvents\r\n\r\nexport default {\r\n  // Handle `modelEvents`, and `collectionEvents` configuration\r\n  _delegateEntityEvents(model, collection) {\r\n    this._undelegateEntityEvents(model, collection);\r\n\r\n    const modelEvents = _.result(this, 'modelEvents');\r\n    bindEvents.call(this, model, modelEvents);\r\n\r\n    const collectionEvents = _.result(this, 'collectionEvents');\r\n    bindEvents.call(this, collection, collectionEvents);\r\n  },\r\n\r\n  _undelegateEntityEvents(model, collection) {\r\n    const modelEvents = _.result(this, 'modelEvents');\r\n    unbindEvents.call(this, model, modelEvents);\r\n\r\n    const collectionEvents = _.result(this, 'collectionEvents');\r\n    unbindEvents.call(this, collection, collectionEvents);\r\n  }\r\n};\r\n","import _ from 'underscore';\r\n\r\n// Borrow event splitter from Backbone\r\nconst delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\nfunction uniqueName(eventName, selector) {\r\n  return [eventName + _.uniqueId('.evt'), selector].join(' ');\r\n}\r\n\r\n// Set event name to be namespaced using a unique index\r\n// to generate a non colliding event namespace\r\n// http://api.jquery.com/event.namespace/\r\nconst getUniqueEventName = function(eventName) {\r\n  const match = eventName.match(delegateEventSplitter);\r\n  return uniqueName(match[1], match[2]);\r\n};\r\n\r\nexport default getUniqueEventName;\r\n","// Add Feature flags here\r\n// e.g. 'class' => false\r\nconst FEATURES = {\r\n  triggersStopPropagation: true,\r\n  triggersPreventDefault: true\r\n};\r\n\r\nfunction isEnabled(name) {\r\n  return !!FEATURES[name];\r\n}\r\n\r\nfunction setEnabled(name, state) {\r\n  return FEATURES[name] = state;\r\n}\r\n\r\nexport {\r\n  FEATURES,\r\n  setEnabled,\r\n  isEnabled\r\n};\r\n","import _ from 'underscore';\r\nimport getUniqueEventName from '../utils/get-unique-event-name';\r\nimport { isEnabled } from '../config/features';\r\n\r\n// Internal method to create an event handler for a given `triggerDef` like\r\n// 'click:foo'\r\nfunction buildViewTrigger(view, triggerDef) {\r\n  if (_.isString(triggerDef)) {\r\n    triggerDef = {event: triggerDef};\r\n  }\r\n\r\n  const eventName = triggerDef.event;\r\n\r\n  let shouldPreventDefault = !!triggerDef.preventDefault;\r\n\r\n  if (isEnabled('triggersPreventDefault')) {\r\n    shouldPreventDefault = triggerDef.preventDefault !== false;\r\n  }\r\n\r\n  let shouldStopPropagation = !!triggerDef.stopPropagation;\r\n\r\n  if (isEnabled('triggersStopPropagation')) {\r\n    shouldStopPropagation = triggerDef.stopPropagation !== false;\r\n  }\r\n\r\n  return function(event) {\r\n    if (shouldPreventDefault) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (shouldStopPropagation) {\r\n      event.stopPropagation();\r\n    }\r\n\r\n    view.triggerMethod(eventName, view, event);\r\n  };\r\n}\r\n\r\nexport default {\r\n\r\n  // Configure `triggers` to forward DOM events to view\r\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\r\n  _getViewTriggers(view, triggers) {\r\n    // Configure the triggers, prevent default\r\n    // action and stop propagation of DOM events\r\n    return _.reduce(triggers, (events, value, key) => {\r\n      key = getUniqueEventName(key);\r\n      events[key] = buildViewTrigger(view, value);\r\n      return events;\r\n    }, {});\r\n  }\r\n\r\n};\r\n","import _ from 'underscore';\r\n// allows for the use of the @ui. syntax within\r\n// a given key for triggers and events\r\n// swaps the @ui with the associated selector.\r\n// Returns a new, non-mutated, parsed events hash.\r\nconst normalizeUIKeys = function(hash, ui) {\r\n  return _.reduce(hash, (memo, val, key) => {\r\n    const normalizedKey = normalizeUIString(key, ui);\r\n    memo[normalizedKey] = val;\r\n    return memo;\r\n  }, {});\r\n};\r\n\r\n// utility method for parsing @ui. syntax strings\r\n// into associated selector\r\nconst normalizeUIString = function(uiString, ui) {\r\n  return uiString.replace(/@ui\\.[a-zA-Z-_$0-9]*/g, (r) => {\r\n    return ui[r.slice(4)];\r\n  });\r\n};\r\n\r\n// allows for the use of the @ui. syntax within\r\n// a given value for regions\r\n// swaps the @ui with the associated selector\r\nconst normalizeUIValues = function(hash, ui, properties) {\r\n  _.each(hash, (val, key) => {\r\n    if (_.isString(val)) {\r\n      hash[key] = normalizeUIString(val, ui);\r\n    } else if (_.isObject(val) && _.isArray(properties)) {\r\n      _.extend(val, normalizeUIValues(_.pick(val, properties), ui));\r\n      /* Value is an object, and we got an array of embedded property names to normalize. */\r\n      _.each(properties, (property) => {\r\n        const propertyVal = val[property];\r\n        if (_.isString(propertyVal)) {\r\n          val[property] = normalizeUIString(propertyVal, ui);\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return hash;\r\n};\r\n\r\nexport default {\r\n\r\n  // normalize the keys of passed hash with the views `ui` selectors.\r\n  // `{\"@ui.foo\": \"bar\"}`\r\n  normalizeUIKeys(hash) {\r\n    const uiBindings = this._getUIBindings();\r\n    return normalizeUIKeys(hash, uiBindings);\r\n  },\r\n\r\n  // normalize the passed string with the views `ui` selectors.\r\n  // `\"@ui.bar\"`\r\n  normalizeUIString(uiString) {\r\n    const uiBindings = this._getUIBindings();\r\n    return normalizeUIString(uiString, uiBindings);\r\n  },\r\n\r\n  // normalize the values of passed hash with the views `ui` selectors.\r\n  // `{foo: \"@ui.bar\"}`\r\n  normalizeUIValues(hash, properties) {\r\n    const uiBindings = this._getUIBindings();\r\n    return normalizeUIValues(hash, uiBindings, properties);\r\n  },\r\n\r\n  _getUIBindings() {\r\n    const uiBindings = _.result(this, '_uiBindings');\r\n    const ui = _.result(this, 'ui');\r\n    return uiBindings || ui;\r\n  },\r\n\r\n  // This method binds the elements specified in the \"ui\" hash inside the view's code with\r\n  // the associated jQuery selectors.\r\n  _bindUIElements() {\r\n    if (!this.ui) { return; }\r\n\r\n    // store the ui hash in _uiBindings so they can be reset later\r\n    // and so re-rendering the view will be able to find the bindings\r\n    if (!this._uiBindings) {\r\n      this._uiBindings = this.ui;\r\n    }\r\n\r\n    // get the bindings result, as a function or otherwise\r\n    const bindings = _.result(this, '_uiBindings');\r\n\r\n    // empty the ui so we don't have anything to start with\r\n    this._ui = {};\r\n\r\n    // bind each of the selectors\r\n    _.each(bindings, (selector, key) => {\r\n      this._ui[key] = this.$(selector);\r\n    });\r\n\r\n    this.ui = this._ui;\r\n  },\r\n\r\n  _unbindUIElements() {\r\n    if (!this.ui || !this._uiBindings) { return; }\r\n\r\n    // delete all of the existing ui bindings\r\n    _.each(this.ui, ($el, name) => {\r\n      delete this.ui[name];\r\n    });\r\n\r\n    // reset the ui element to the original bindings configuration\r\n    this.ui = this._uiBindings;\r\n    delete this._uiBindings;\r\n    delete this._ui;\r\n  },\r\n\r\n  _getUI(name) {\r\n    return this._ui[name];\r\n  }\r\n};\r\n","// ViewMixin\r\n//  ---------\r\n\r\nimport Backbone from 'backbone';\r\nimport _ from 'underscore';\r\nimport { triggerMethod } from '../common/trigger-method';\r\nimport BehaviorsMixin from './behaviors';\r\nimport CommonMixin from './common';\r\nimport DelegateEntityEventsMixin from './delegate-entity-events';\r\nimport DomMixin from './dom';\r\nimport TriggersMixin from './triggers';\r\nimport UIMixin from './ui';\r\n\r\n// MixinOptions\r\n// - behaviors\r\n// - childViewEventPrefix\r\n// - childViewEvents\r\n// - childViewTriggers\r\n// - collectionEvents\r\n// - modelEvents\r\n// - triggers\r\n// - ui\r\n\r\n\r\nconst ViewMixin = {\r\n  supportsRenderLifecycle: true,\r\n  supportsDestroyLifecycle: true,\r\n\r\n  _isDestroyed: false,\r\n\r\n  isDestroyed() {\r\n    return !!this._isDestroyed;\r\n  },\r\n\r\n  _isRendered: false,\r\n\r\n  isRendered() {\r\n    return !!this._isRendered;\r\n  },\r\n\r\n  _isAttached: false,\r\n\r\n  isAttached() {\r\n    return !!this._isAttached;\r\n  },\r\n\r\n  // Overriding Backbone.View's `delegateEvents` to handle\r\n  // `events` and `triggers`\r\n  delegateEvents(eventsArg) {\r\n\r\n    this._proxyBehaviorViewProperties();\r\n    this._buildEventProxies();\r\n\r\n    const viewEvents = this._getEvents(eventsArg);\r\n\r\n    if (typeof eventsArg === 'undefined') {\r\n      this.events = viewEvents;\r\n    }\r\n\r\n    const combinedEvents = _.extend({},\r\n      this._getBehaviorEvents(),\r\n      viewEvents,\r\n      this._getBehaviorTriggers(),\r\n      this.getTriggers()\r\n    );\r\n\r\n    Backbone.View.prototype.delegateEvents.call(this, combinedEvents);\r\n\r\n    return this;\r\n  },\r\n\r\n  _getEvents(eventsArg) {\r\n    const events = eventsArg || this.events;\r\n\r\n    if (_.isFunction(events)) {\r\n      return this.normalizeUIKeys(events.call(this));\r\n    }\r\n\r\n    return this.normalizeUIKeys(events);\r\n  },\r\n\r\n  // Configure `triggers` to forward DOM events to view\r\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\r\n  getTriggers() {\r\n    if (!this.triggers) { return; }\r\n\r\n    // Allow `triggers` to be configured as a function\r\n    const triggers = this.normalizeUIKeys(_.result(this, 'triggers'));\r\n\r\n    // Configure the triggers, prevent default\r\n    // action and stop propagation of DOM events\r\n    return this._getViewTriggers(this, triggers);\r\n  },\r\n\r\n  // Handle `modelEvents`, and `collectionEvents` configuration\r\n  delegateEntityEvents() {\r\n    this._delegateEntityEvents(this.model, this.collection);\r\n\r\n    // bind each behaviors model and collection events\r\n    this._delegateBehaviorEntityEvents();\r\n\r\n    return this;\r\n  },\r\n\r\n  // Handle unbinding `modelEvents`, and `collectionEvents` configuration\r\n  undelegateEntityEvents() {\r\n    this._undelegateEntityEvents(this.model, this.collection);\r\n\r\n    // unbind each behaviors model and collection events\r\n    this._undelegateBehaviorEntityEvents();\r\n\r\n    return this;\r\n  },\r\n\r\n  // Handle destroying the view and its children.\r\n  destroy(...args) {\r\n    if (this._isDestroyed) { return this; }\r\n    const shouldTriggerDetach = !!this._isAttached;\r\n\r\n    this.triggerMethod('before:destroy', this, ...args);\r\n    if (shouldTriggerDetach) {\r\n      this.triggerMethod('before:detach', this);\r\n    }\r\n\r\n    // unbind UI elements\r\n    this.unbindUIElements();\r\n\r\n    // remove the view from the DOM\r\n    this.removeEl(this.el);\r\n\r\n    if (shouldTriggerDetach) {\r\n      this._isAttached = false;\r\n      this.triggerMethod('detach', this);\r\n    }\r\n\r\n    // remove children after the remove to prevent extra paints\r\n    this._removeChildren();\r\n\r\n    this._destroyBehaviors(args);\r\n\r\n    this._isDestroyed = true;\r\n    this._isRendered = false;\r\n    this.triggerMethod('destroy', this, ...args);\r\n\r\n    this.stopListening();\r\n\r\n    return this;\r\n  },\r\n\r\n  bindUIElements() {\r\n    this._bindUIElements();\r\n    this._bindBehaviorUIElements();\r\n\r\n    return this;\r\n  },\r\n\r\n  // This method unbinds the elements specified in the \"ui\" hash\r\n  unbindUIElements() {\r\n    this._unbindUIElements();\r\n    this._unbindBehaviorUIElements();\r\n\r\n    return this;\r\n  },\r\n\r\n  getUI(name) {\r\n    return this._getUI(name);\r\n  },\r\n\r\n  // used as the prefix for child view events\r\n  // that are forwarded through the layoutview\r\n  childViewEventPrefix: 'childview',\r\n\r\n  // import the `triggerMethod` to trigger events with corresponding\r\n  // methods if the method exists\r\n  triggerMethod() {\r\n    const ret = triggerMethod.apply(this, arguments);\r\n\r\n    this._triggerEventOnBehaviors.apply(this, arguments);\r\n\r\n    return ret;\r\n  },\r\n\r\n  // Cache `childViewEvents` and `childViewTriggers`\r\n  _buildEventProxies() {\r\n    this._childViewEvents = _.result(this, 'childViewEvents');\r\n    this._childViewTriggers = _.result(this, 'childViewTriggers');\r\n  },\r\n\r\n  _proxyChildViewEvents(view) {\r\n    this.listenTo(view, 'all', this._childViewEventHandler);\r\n  },\r\n\r\n  _childViewEventHandler(eventName, ...args) {\r\n    const childViewEvents = this.normalizeMethods(this._childViewEvents);\r\n\r\n    // call collectionView childViewEvent if defined\r\n    if (typeof childViewEvents !== 'undefined' && _.isFunction(childViewEvents[eventName])) {\r\n      childViewEvents[eventName].apply(this, args);\r\n    }\r\n\r\n    // use the parent view's proxyEvent handlers\r\n    const childViewTriggers = this._childViewTriggers;\r\n\r\n    // Call the event with the proxy name on the parent layout\r\n    if (childViewTriggers && _.isString(childViewTriggers[eventName])) {\r\n      this.triggerMethod(childViewTriggers[eventName], ...args);\r\n    }\r\n\r\n    const prefix = _.result(this, 'childViewEventPrefix');\r\n\r\n    if (prefix !== false) {\r\n      const childEventName = prefix + ':' + eventName;\r\n\r\n      this.triggerMethod(childEventName, ...args);\r\n    }\r\n  }\r\n};\r\n\r\n_.extend(ViewMixin, DomMixin, BehaviorsMixin, CommonMixin, DelegateEntityEventsMixin, TriggersMixin, UIMixin);\r\n\r\nexport default ViewMixin;\r\n","import { triggerMethodOn } from '../common/trigger-method';\r\n\r\nexport default function destroyBackboneView(view) {\r\n  if (!view.supportsDestroyLifecycle) {\r\n    triggerMethodOn(view, 'before:destroy', view);\r\n  }\r\n\r\n  const shouldTriggerDetach = !!view._isAttached;\r\n\r\n  if (shouldTriggerDetach) {\r\n    triggerMethodOn(view, 'before:detach', view);\r\n  }\r\n\r\n  view.remove();\r\n\r\n  if (shouldTriggerDetach) {\r\n    view._isAttached = false;\r\n    triggerMethodOn(view, 'detach', view);\r\n  }\r\n\r\n  view._isDestroyed = true;\r\n\r\n  if (!view.supportsDestroyLifecycle) {\r\n    triggerMethodOn(view, 'destroy', view);\r\n  }\r\n}\r\n","// Region\r\n// ------\r\n\r\nimport _ from 'underscore';\r\nimport Backbone from 'backbone';\r\nimport deprecate from './utils/deprecate';\r\nimport destroyBackboneView from './utils/destroy-backbone-view';\r\nimport monitorViewEvents from './common/monitor-view-events';\r\nimport isNodeAttached from './common/is-node-attached';\r\nimport { triggerMethodOn } from './common/trigger-method';\r\nimport DomMixin from './mixins/dom';\r\nimport MarionetteObject from './object';\r\nimport MarionetteError from './error';\r\nimport View from './view';\r\n\r\nconst ClassOptions = [\r\n  'allowMissingEl',\r\n  'parentEl',\r\n  'replaceElement'\r\n];\r\n\r\nconst Region = MarionetteObject.extend({\r\n  cidPrefix: 'mnr',\r\n  replaceElement: false,\r\n  _isReplaced: false,\r\n  _isSwappingView: false,\r\n\r\n  constructor(options) {\r\n    this._setOptions(options);\r\n\r\n    this.mergeOptions(options, ClassOptions);\r\n\r\n    // getOption necessary because options.el may be passed as undefined\r\n    this._initEl = this.el = this.getOption('el');\r\n\r\n    // Handle when this.el is passed in as a $ wrapped element.\r\n    this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;\r\n\r\n    if (!this.el) {\r\n      throw new MarionetteError({\r\n        name: 'NoElError',\r\n        message: 'An \"el\" must be specified for a region.'\r\n      });\r\n    }\r\n\r\n    this.$el = this.getEl(this.el);\r\n    MarionetteObject.call(this, options);\r\n  },\r\n\r\n  // Displays a backbone view instance inside of the region. Handles calling the `render`\r\n  // method for you. Reads content directly from the `el` attribute. The `preventDestroy`\r\n  // option can be used to prevent a view from the old view being destroyed on show.\r\n  show(view, options) {\r\n    if (!this._ensureElement(options)) {\r\n      return;\r\n    }\r\n\r\n    view = this._getView(view, options);\r\n\r\n    if (view === this.currentView) { return this; }\r\n\r\n    this._isSwappingView = !!this.currentView;\r\n\r\n    this.triggerMethod('before:show', this, view, options);\r\n\r\n    // Assume an attached view is already in the region for pre-existing DOM\r\n    if (!view._isAttached) {\r\n      this.empty(options);\r\n    }\r\n\r\n    this._setupChildView(view);\r\n\r\n    this._renderView(view);\r\n\r\n    this._attachView(view, options);\r\n\r\n    this.currentView = view;\r\n\r\n    this.triggerMethod('show', this, view, options);\r\n\r\n    this._isSwappingView = false;\r\n\r\n    return this;\r\n  },\r\n\r\n  _setupChildView(view) {\r\n    monitorViewEvents(view);\r\n\r\n    this._proxyChildViewEvents(view);\r\n\r\n    // We need to listen for if a view is destroyed in a way other than through the region.\r\n    // If this happens we need to remove the reference to the currentView since once a view\r\n    // has been destroyed we can not reuse it.\r\n    view.on('destroy', this._empty, this);\r\n  },\r\n\r\n  _proxyChildViewEvents(view) {\r\n    const parentView = this._parentView;\r\n\r\n    if (!parentView) { return; }\r\n\r\n    parentView._proxyChildViewEvents(view);\r\n  },\r\n\r\n  _renderView(view) {\r\n    if (view._isRendered) {\r\n      return;\r\n    }\r\n\r\n    if (!view.supportsRenderLifecycle) {\r\n      triggerMethodOn(view, 'before:render', view);\r\n    }\r\n\r\n    view.render();\r\n\r\n    if (!view.supportsRenderLifecycle) {\r\n      view._isRendered = true;\r\n      triggerMethodOn(view, 'render', view);\r\n    }\r\n  },\r\n\r\n  _attachView(view, options = {}) {\r\n    const shouldTriggerAttach = !view._isAttached && isNodeAttached(this.el);\r\n    const shouldReplaceEl = typeof options.replaceElement === 'undefined' ? !!_.result(this, 'replaceElement') : !!options.replaceElement;\r\n\r\n    if (shouldTriggerAttach) {\r\n      triggerMethodOn(view, 'before:attach', view);\r\n    }\r\n\r\n    if (shouldReplaceEl) {\r\n      this._replaceEl(view);\r\n    } else {\r\n      this.attachHtml(view);\r\n    }\r\n\r\n    if (shouldTriggerAttach) {\r\n      view._isAttached = true;\r\n      triggerMethodOn(view, 'attach', view);\r\n    }\r\n  },\r\n\r\n  _ensureElement(options = {}) {\r\n    if (!_.isObject(this.el)) {\r\n      this.$el = this.getEl(this.el);\r\n      this.el = this.$el[0];\r\n    }\r\n\r\n    if (!this.$el || this.$el.length === 0) {\r\n      const allowMissingEl = typeof options.allowMissingEl === 'undefined' ? !!_.result(this, 'allowMissingEl') : !!options.allowMissingEl;\r\n\r\n      if (allowMissingEl) {\r\n        return false;\r\n      } else {\r\n        throw new MarionetteError(`An \"el\" must exist in DOM for this region ${this.cid}`);\r\n      }\r\n    }\r\n    return true;\r\n  },\r\n\r\n  _getView(view) {\r\n    if (!view) {\r\n      throw new MarionetteError({\r\n        name: 'ViewNotValid',\r\n        message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.'\r\n      });\r\n    }\r\n\r\n    if (view._isDestroyed) {\r\n      throw new MarionetteError({\r\n        name: 'ViewDestroyedError',\r\n        message: `View (cid: \"${view.cid}\") has already been destroyed and cannot be used.`\r\n      });\r\n    }\r\n\r\n    if (view instanceof Backbone.View) {\r\n      return view;\r\n    }\r\n\r\n    const viewOptions = this._getViewOptions(view);\r\n\r\n    return new View(viewOptions);\r\n  },\r\n\r\n  // This allows for a template or a static string to be\r\n  // used as a template\r\n  _getViewOptions(viewOptions) {\r\n    if (_.isFunction(viewOptions)) {\r\n      return { template: viewOptions };\r\n    }\r\n\r\n    if (_.isObject(viewOptions)) {\r\n      return viewOptions;\r\n    }\r\n\r\n    const template = function() { return viewOptions; };\r\n\r\n    return { template };\r\n  },\r\n\r\n  // Override this method to change how the region finds the DOM element that it manages. Return\r\n  // a jQuery selector object scoped to a provided parent el or the document if none exists.\r\n  getEl(el) {\r\n    return this.findEls(el, _.result(this, 'parentEl'));\r\n  },\r\n\r\n  _replaceEl(view) {\r\n    // always restore the el to ensure the regions el is present before replacing\r\n    this._restoreEl();\r\n\r\n    view.on('before:destroy', this._restoreEl, this);\r\n\r\n    this.replaceEl(view.el, this.el);\r\n\r\n    this._isReplaced = true;\r\n  },\r\n\r\n  // Restore the region's element in the DOM.\r\n  _restoreEl() {\r\n    // There is nothing to replace\r\n    if (!this._isReplaced) {\r\n      return;\r\n    }\r\n\r\n    const view = this.currentView;\r\n\r\n    if (!view) {\r\n      return;\r\n    }\r\n\r\n    this.replaceEl(this.el, view.el);\r\n\r\n    this._isReplaced = false;\r\n  },\r\n\r\n  // Check to see if the region's el was replaced.\r\n  isReplaced() {\r\n    return !!this._isReplaced;\r\n  },\r\n\r\n  // Check to see if a view is being swapped by another\r\n  isSwappingView() {\r\n    return !!this._isSwappingView;\r\n  },\r\n\r\n  // Override this method to change how the new view is appended to the `$el` that the\r\n  // region is managing\r\n  attachHtml(view) {\r\n    this.appendChildren(this.el, view.el);\r\n  },\r\n\r\n  // Destroy the current view, if there is one. If there is no current view, it does\r\n  // nothing and returns immediately.\r\n  empty(options = { allowMissingEl: true }) {\r\n    const view = this.currentView;\r\n\r\n    // If there is no view in the region we should only detach current html\r\n    if (!view) {\r\n      if (this._ensureElement(options)) {\r\n        this.detachHtml();\r\n      }\r\n      return this;\r\n    }\r\n\r\n    const shouldDestroy = !options.preventDestroy;\r\n\r\n    if (!shouldDestroy) {\r\n      deprecate('The preventDestroy option is deprecated. Use Region#detachView');\r\n    }\r\n\r\n    this._empty(view, shouldDestroy);\r\n    return this;\r\n  },\r\n\r\n  _empty(view, shouldDestroy) {\r\n    view.off('destroy', this._empty, this);\r\n    this.triggerMethod('before:empty', this, view);\r\n\r\n    this._restoreEl();\r\n\r\n    delete this.currentView;\r\n\r\n    if (!view._isDestroyed) {\r\n      if (shouldDestroy) {\r\n        this.removeView(view);\r\n      } else {\r\n        this._detachView(view);\r\n      }\r\n      this._stopChildViewEvents(view);\r\n    }\r\n\r\n    this.triggerMethod('empty', this, view);\r\n  },\r\n\r\n  _stopChildViewEvents(view) {\r\n    const parentView = this._parentView;\r\n\r\n    if (!parentView) { return; }\r\n\r\n    this._parentView.stopListening(view);\r\n  },\r\n\r\n  destroyView(view) {\r\n    if (view.destroy) {\r\n      view.destroy();\r\n    } else {\r\n      destroyBackboneView(view);\r\n    }\r\n  },\r\n\r\n  removeView(view) {\r\n    this.destroyView(view);\r\n  },\r\n\r\n  detachView() {\r\n    const view = this.currentView;\r\n\r\n    if (!view) {\r\n      return;\r\n    }\r\n\r\n    this._empty(view);\r\n\r\n    return view;\r\n  },\r\n\r\n  _detachView(view) {\r\n    const shouldTriggerDetach = !!view._isAttached;\r\n    if (shouldTriggerDetach) {\r\n      triggerMethodOn(view, 'before:detach', view);\r\n    }\r\n\r\n    this.detachHtml();\r\n\r\n    if (shouldTriggerDetach) {\r\n      view._isAttached = false;\r\n      triggerMethodOn(view, 'detach', view);\r\n    }\r\n  },\r\n\r\n  // Override this method to change how the region detaches current content\r\n  detachHtml() {\r\n    this.detachContents(this.el);\r\n  },\r\n\r\n  // Checks whether a view is currently present within the region. Returns `true` if there is\r\n  // and `false` if no view is present.\r\n  hasView() {\r\n    return !!this.currentView;\r\n  },\r\n\r\n  // Reset the region by destroying any existing view and clearing out the cached `$el`.\r\n  // The next time a view is shown via this region, the region will re-query the DOM for\r\n  // the region's `el`.\r\n  reset(options) {\r\n    this.empty(options);\r\n\r\n    if (this.$el) {\r\n      this.el = this._initEl;\r\n    }\r\n\r\n    delete this.$el;\r\n    return this;\r\n  },\r\n\r\n  destroy(options) {\r\n    this.reset(options);\r\n    return MarionetteObject.prototype.destroy.apply(this, arguments);\r\n  }\r\n});\r\n\r\n_.extend(Region.prototype, DomMixin);\r\n\r\nexport default Region;\r\n","import _ from 'underscore';\r\nimport deprecate from '../utils/deprecate';\r\nimport MarionetteError from '../error';\r\nimport Region from '../region';\r\n\r\n// return the region instance from the definition\r\nexport default function(definition, defaults) {\r\n  if (definition instanceof Region) {\r\n    return definition;\r\n  }\r\n\r\n  return buildRegionFromDefinition(definition, defaults);\r\n}\r\n\r\nfunction buildRegionFromDefinition(definition, defaults) {\r\n  const opts = _.extend({}, defaults);\r\n\r\n  if (_.isString(definition)) {\r\n    _.extend(opts, { el: definition });\r\n\r\n    return buildRegionFromObject(opts);\r\n  }\r\n\r\n  if (_.isFunction(definition)) {\r\n    _.extend(opts, { regionClass: definition });\r\n\r\n    return buildRegionFromObject(opts);\r\n  }\r\n\r\n  if (_.isObject(definition)) {\r\n    if (definition.selector) {\r\n      deprecate('The selector option on a Region definition object is deprecated. Use el to pass a selector string');\r\n    }\r\n\r\n    _.extend(opts, { el: definition.selector }, definition);\r\n\r\n    return buildRegionFromObject(opts);\r\n  }\r\n\r\n  throw new MarionetteError({\r\n    message: 'Improper region configuration type.',\r\n    url: 'marionette.region.html#region-configuration-types'\r\n  });\r\n}\r\n\r\nfunction buildRegionFromObject(definition) {\r\n  const RegionClass = definition.regionClass\r\n\r\n  const options = _.omit(definition, 'regionClass');\r\n\r\n  return new RegionClass(options);\r\n}\r\n","import _ from 'underscore';\r\nimport _invoke from '../utils/invoke';\r\nimport buildRegion from '../common/build-region';\r\nimport Region from '../region';\r\n\r\n// MixinOptions\r\n// - regions\r\n// - regionClass\r\n\r\nexport default {\r\n  regionClass: Region,\r\n\r\n  // Internal method to initialize the regions that have been defined in a\r\n  // `regions` attribute on this View.\r\n  _initRegions() {\r\n\r\n    // init regions hash\r\n    this.regions = this.regions || {};\r\n    this._regions = {};\r\n\r\n    this.addRegions(_.result(this, 'regions'));\r\n  },\r\n\r\n  // Internal method to re-initialize all of the regions by updating\r\n  // the `el` that they point to\r\n  _reInitRegions() {\r\n    _invoke(this._regions, 'reset');\r\n  },\r\n\r\n  // Add a single region, by name, to the View\r\n  addRegion(name, definition) {\r\n    const regions = {};\r\n    regions[name] = definition;\r\n    return this.addRegions(regions)[name];\r\n  },\r\n\r\n  // Add multiple regions as a {name: definition, name2: def2} object literal\r\n  addRegions(regions) {\r\n    // If there's nothing to add, stop here.\r\n    if (_.isEmpty(regions)) {\r\n      return;\r\n    }\r\n\r\n    // Normalize region selectors hash to allow\r\n    // a user to use the @ui. syntax.\r\n    regions = this.normalizeUIValues(regions, ['selector', 'el']);\r\n\r\n    // Add the regions definitions to the regions property\r\n    this.regions = _.extend({}, this.regions, regions);\r\n\r\n    return this._addRegions(regions);\r\n  },\r\n\r\n  // internal method to build and add regions\r\n  _addRegions(regionDefinitions) {\r\n    const defaults = {\r\n      regionClass: this.regionClass,\r\n      parentEl: _.partial(_.result, this, 'el')\r\n    };\r\n\r\n    return _.reduce(regionDefinitions, (regions, definition, name) => {\r\n      regions[name] = buildRegion(definition, defaults);\r\n      this._addRegion(regions[name], name);\r\n      return regions;\r\n    }, {});\r\n  },\r\n\r\n  _addRegion(region, name) {\r\n    this.triggerMethod('before:add:region', this, name, region);\r\n\r\n    region._parentView = this;\r\n\r\n    this._regions[name] = region;\r\n\r\n    this.triggerMethod('add:region', this, name, region);\r\n  },\r\n\r\n  // Remove a single region from the View, by name\r\n  removeRegion(name) {\r\n    const region = this._regions[name];\r\n\r\n    this._removeRegion(region, name);\r\n\r\n    return region;\r\n  },\r\n\r\n  // Remove all regions from the View\r\n  removeRegions() {\r\n    const regions = this.getRegions();\r\n\r\n    _.each(this._regions, _.bind(this._removeRegion, this));\r\n\r\n    return regions;\r\n  },\r\n\r\n  _removeRegion(region, name) {\r\n    this.triggerMethod('before:remove:region', this, name, region);\r\n\r\n    region.destroy();\r\n\r\n    delete this.regions[name];\r\n    delete this._regions[name];\r\n\r\n    this.triggerMethod('remove:region', this, name, region);\r\n  },\r\n\r\n  // Empty all regions in the region manager, but\r\n  // leave them attached\r\n  emptyRegions() {\r\n    const regions = this.getRegions();\r\n    _invoke(regions, 'empty');\r\n    return regions;\r\n  },\r\n\r\n  // Checks to see if view contains region\r\n  // Accepts the region name\r\n  // hasRegion('main')\r\n  hasRegion(name) {\r\n    return !!this.getRegion(name);\r\n  },\r\n\r\n  // Provides access to regions\r\n  // Accepts the region name\r\n  // getRegion('main')\r\n  getRegion(name) {\r\n    return this._regions[name];\r\n  },\r\n\r\n  // Get all regions\r\n  getRegions() {\r\n    return _.clone(this._regions);\r\n  },\r\n\r\n  showChildView(name, view, ...args) {\r\n    const region = this.getRegion(name);\r\n    return region.show(view, ...args);\r\n  },\r\n\r\n  detachChildView(name) {\r\n    return this.getRegion(name).detachView();\r\n  },\r\n\r\n  getChildView(name) {\r\n    return this.getRegion(name).currentView;\r\n  }\r\n\r\n};\r\n","// Renderer\r\n// --------\r\n\r\nimport _ from 'underscore';\r\nimport MarionetteError from '../error';\r\nimport TemplateCache from '../template-cache';\r\n\r\n// Render a template with data by passing in the template\r\n// selector and the data to render.\r\nconst Renderer = {\r\n\r\n  // Render a template with data. The `template` parameter is\r\n  // passed to the `TemplateCache` object to retrieve the\r\n  // template function. Override this method to provide your own\r\n  // custom rendering and template handling for all of Marionette.\r\n  render(template, data) {\r\n    if (!template) {\r\n      throw new MarionetteError({\r\n        name: 'TemplateNotFoundError',\r\n        message: 'Cannot render the template since its false, null or undefined.'\r\n      });\r\n    }\r\n\r\n    const templateFunc = _.isFunction(template) ? template : TemplateCache.get(template);\r\n\r\n    return templateFunc(data);\r\n  }\r\n};\r\n\r\nexport default Renderer;\r\n","// View\r\n// ---------\r\n\r\nimport _ from 'underscore';\r\nimport Backbone from 'backbone';\r\nimport isNodeAttached from './common/is-node-attached';\r\nimport monitorViewEvents from './common/monitor-view-events';\r\nimport ViewMixin from './mixins/view';\r\nimport RegionsMixin from './mixins/regions';\r\nimport Renderer from './config/renderer';\r\n\r\nconst ClassOptions = [\r\n  'behaviors',\r\n  'childViewEventPrefix',\r\n  'childViewEvents',\r\n  'childViewTriggers',\r\n  'collectionEvents',\r\n  'events',\r\n  'modelEvents',\r\n  'regionClass',\r\n  'regions',\r\n  'template',\r\n  'templateContext',\r\n  'triggers',\r\n  'ui'\r\n];\r\n\r\n// The standard view. Includes view events, automatic rendering\r\n// of Underscore templates, nested views, and more.\r\nconst View = Backbone.View.extend({\r\n\r\n  constructor(options) {\r\n    this.render = _.bind(this.render, this);\r\n\r\n    this._setOptions(options);\r\n\r\n    this.mergeOptions(options, ClassOptions);\r\n\r\n    monitorViewEvents(this);\r\n\r\n    this._initBehaviors();\r\n    this._initRegions();\r\n\r\n    const args = Array.prototype.slice.call(arguments);\r\n    args[0] = this.options;\r\n    Backbone.View.prototype.constructor.apply(this, args);\r\n\r\n    this.delegateEntityEvents();\r\n  },\r\n\r\n  // Serialize the view's model *or* collection, if\r\n  // it exists, for the template\r\n  serializeData() {\r\n    if (!this.model && !this.collection) {\r\n      return {};\r\n    }\r\n\r\n    // If we have a model, we serialize that\r\n    if (this.model) {\r\n      return this.serializeModel();\r\n    }\r\n\r\n    // Otherwise, we serialize the collection,\r\n    // making it available under the `items` property\r\n    return {\r\n      items: this.serializeCollection()\r\n    };\r\n  },\r\n\r\n  // Prepares the special `model` property of a view\r\n  // for being displayed in the template. By default\r\n  // we simply clone the attributes. Override this if\r\n  // you need a custom transformation for your view's model\r\n  serializeModel() {\r\n    if (!this.model) { return {}; }\r\n    return _.clone(this.model.attributes);\r\n  },\r\n\r\n  // Serialize a collection by cloning each of\r\n  // its model's attributes\r\n  serializeCollection() {\r\n    if (!this.collection) { return {}; }\r\n    return this.collection.map(function(model) { return _.clone(model.attributes); });\r\n  },\r\n\r\n  // Overriding Backbone.View's `setElement` to handle\r\n  // if an el was previously defined. If so, the view might be\r\n  // rendered or attached on setElement.\r\n  setElement() {\r\n    const hasEl = !!this.el;\r\n\r\n    Backbone.View.prototype.setElement.apply(this, arguments);\r\n\r\n    if (hasEl) {\r\n      this._isRendered = !!this.$el.length;\r\n      this._isAttached = isNodeAttached(this.el);\r\n    }\r\n\r\n    if (this._isRendered) {\r\n      this.bindUIElements();\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  // Render the view, defaulting to underscore.js templates.\r\n  // You can override this in your view definition to provide\r\n  // a very specific rendering for your view. In general, though,\r\n  // you should override the `Marionette.Renderer` object to\r\n  // change how Marionette renders views.\r\n  // Subsequent renders after the first will re-render all nested\r\n  // views.\r\n  render() {\r\n    if (this._isDestroyed) { return this; }\r\n\r\n    this.triggerMethod('before:render', this);\r\n\r\n    // If this is not the first render call, then we need to\r\n    // re-initialize the `el` for each region\r\n    if (this._isRendered) {\r\n      this._reInitRegions();\r\n    }\r\n\r\n    this._renderTemplate();\r\n    this.bindUIElements();\r\n\r\n    this._isRendered = true;\r\n    this.triggerMethod('render', this);\r\n\r\n    return this;\r\n  },\r\n\r\n  // Internal method to render the template with the serialized data\r\n  // and template context via the `Marionette.Renderer` object.\r\n  _renderTemplate() {\r\n    const template = this.getTemplate();\r\n\r\n    // Allow template-less views\r\n    if (template === false) {\r\n      return;\r\n    }\r\n\r\n    // Add in entity data and template context\r\n    const data = this.mixinTemplateContext(this.serializeData());\r\n\r\n    // Render and add to el\r\n    const html = Renderer.render(template, data, this);\r\n    this.attachElContent(html);\r\n  },\r\n\r\n  // Get the template for this view\r\n  // instance. You can set a `template` attribute in the view\r\n  // definition or pass a `template: \"whatever\"` parameter in\r\n  // to the constructor options.\r\n  getTemplate() {\r\n    return this.template;\r\n  },\r\n\r\n  // Mix in template context methods. Looks for a\r\n  // `templateContext` attribute, which can either be an\r\n  // object literal, or a function that returns an object\r\n  // literal. All methods and attributes from this object\r\n  // are copies to the object passed in.\r\n  mixinTemplateContext(target = {}) {\r\n    const templateContext = _.result(this, 'templateContext');\r\n    return _.extend(target, templateContext);\r\n  },\r\n\r\n  // Attaches the content of a given view.\r\n  // This method can be overridden to optimize rendering,\r\n  // or to render in a non standard way.\r\n  //\r\n  // For example, using `innerHTML` instead of `$el.html`\r\n  //\r\n  // ```js\r\n  // attachElContent(html) {\r\n  //   this.el.innerHTML = html;\r\n  //   return this;\r\n  // }\r\n  // ```\r\n  attachElContent(html) {\r\n    this.setInnerContent(this.el, html);\r\n\r\n    return this;\r\n  },\r\n\r\n  // called by ViewMixin destroy\r\n  _removeChildren() {\r\n    this.removeRegions();\r\n  },\r\n\r\n  _getImmediateChildren() {\r\n    return _.chain(this.getRegions())\r\n      .map('currentView')\r\n      .compact()\r\n      .value();\r\n  }\r\n});\r\n\r\n_.extend(View.prototype, ViewMixin, RegionsMixin);\r\n\r\nexport default View;\r\n","// Mix in methods from Underscore, for iteration, and other\r\n// collection related features.\r\n// Borrowing this code from Backbone.Collection:\r\n// https://github.com/jashkenas/backbone/blob/1.1.2/backbone.js#L962\r\n\r\nimport _ from 'underscore';\r\n\r\nconst methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\r\n                'select', 'reject', 'every', 'all', 'some', 'any', 'include',\r\n                'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\r\n                'last', 'without', 'isEmpty', 'pluck', 'reduce'];\r\n\r\nconst emulateCollection = function(object, listProperty) {\r\n  _.each(methods, function(method) {\r\n    object[method] = function() {\r\n      const list = _.values(_.result(this, listProperty));\r\n      const args = [list].concat(_.toArray(arguments));\r\n      return _[method].apply(_, args);\r\n    };\r\n  });\r\n};\r\n\r\nexport default emulateCollection;\r\n","import _ from 'underscore';\r\nimport emulateCollection from './utils/emulate-collection';\r\n\r\n// Provide a container to store, retrieve and\r\n// shut down child views.\r\nconst Container = function(views) {\r\n  this._views = {};\r\n  this._indexByModel = {};\r\n  this._indexByCustom = {};\r\n  this._updateLength();\r\n\r\n  _.each(views, _.bind(this.add, this));\r\n};\r\n\r\nemulateCollection(Container.prototype, '_views');\r\n\r\n// Container Methods\r\n// -----------------\r\n\r\n_.extend(Container.prototype, {\r\n\r\n  // Add a view to this container. Stores the view\r\n  // by `cid` and makes it searchable by the model\r\n  // cid (and model itself). Optionally specify\r\n  // a custom key to store an retrieve the view.\r\n  add(view, customIndex) {\r\n    return this._add(view, customIndex)._updateLength();\r\n  },\r\n\r\n  // To be used when avoiding call _updateLength\r\n  // When you are done adding all your new views\r\n  // call _updateLength\r\n  _add(view, customIndex) {\r\n    const viewCid = view.cid;\r\n\r\n    // store the view\r\n    this._views[viewCid] = view;\r\n\r\n    // index it by model\r\n    if (view.model) {\r\n      this._indexByModel[view.model.cid] = viewCid;\r\n    }\r\n\r\n    // index by custom\r\n    if (customIndex) {\r\n      this._indexByCustom[customIndex] = viewCid;\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  // Find a view by the model that was attached to\r\n  // it. Uses the model's `cid` to find it.\r\n  findByModel(model) {\r\n    return this.findByModelCid(model.cid);\r\n  },\r\n\r\n  // Find a view by the `cid` of the model that was attached to\r\n  // it. Uses the model's `cid` to find the view `cid` and\r\n  // retrieve the view using it.\r\n  findByModelCid(modelCid) {\r\n    const viewCid = this._indexByModel[modelCid];\r\n    return this.findByCid(viewCid);\r\n  },\r\n\r\n  // Find a view by a custom indexer.\r\n  findByCustom(index) {\r\n    const viewCid = this._indexByCustom[index];\r\n    return this.findByCid(viewCid);\r\n  },\r\n\r\n  // Find by index. This is not guaranteed to be a\r\n  // stable index.\r\n  findByIndex(index) {\r\n    return _.values(this._views)[index];\r\n  },\r\n\r\n  // retrieve a view by its `cid` directly\r\n  findByCid(cid) {\r\n    return this._views[cid];\r\n  },\r\n\r\n  // Remove a view\r\n  remove(view) {\r\n    return this._remove(view)._updateLength();\r\n  },\r\n\r\n  // To be used when avoiding call _updateLength\r\n  // When you are done adding all your new views\r\n  // call _updateLength\r\n  _remove(view) {\r\n    const viewCid = view.cid;\r\n\r\n    // delete model index\r\n    if (view.model) {\r\n      delete this._indexByModel[view.model.cid];\r\n    }\r\n\r\n    // delete custom index\r\n    _.some(this._indexByCustom, _.bind(function(cid, key) {\r\n      if (cid === viewCid) {\r\n        delete this._indexByCustom[key];\r\n        return true;\r\n      }\r\n    }, this));\r\n\r\n    // remove the view from the container\r\n    delete this._views[viewCid];\r\n\r\n    return this;\r\n  },\r\n\r\n  // Update the `.length` attribute on this container\r\n  _updateLength() {\r\n    this.length = _.size(this._views);\r\n\r\n    return this;\r\n  }\r\n});\r\n\r\nexport default Container;\r\n","// Collection View\r\n// ---------------\r\n\r\nimport _ from 'underscore';\r\nimport Backbone from 'backbone';\r\nimport destroyBackboneView from './utils/destroy-backbone-view';\r\nimport isNodeAttached from './common/is-node-attached';\r\nimport monitorViewEvents from './common/monitor-view-events';\r\nimport { triggerMethodOn } from './common/trigger-method';\r\nimport ChildViewContainer from './child-view-container';\r\nimport MarionetteError from './error';\r\nimport ViewMixin from './mixins/view';\r\n\r\nconst ClassOptions = [\r\n  'behaviors',\r\n  'childView',\r\n  'childViewEventPrefix',\r\n  'childViewEvents',\r\n  'childViewOptions',\r\n  'childViewTriggers',\r\n  'collectionEvents',\r\n  'events',\r\n  'filter',\r\n  'emptyView',\r\n  'emptyViewOptions',\r\n  'modelEvents',\r\n  'reorderOnSort',\r\n  'sort',\r\n  'triggers',\r\n  'ui',\r\n  'viewComparator'\r\n];\r\n\r\n// A view that iterates over a Backbone.Collection\r\n// and renders an individual child view for each model.\r\nconst CollectionView = Backbone.View.extend({\r\n\r\n  // flag for maintaining the sorted order of the collection\r\n  sort: true,\r\n\r\n  // constructor\r\n  // option to pass `{sort: false}` to prevent the `CollectionView` from\r\n  // maintaining the sorted order of the collection.\r\n  // This will fallback onto appending childView's to the end.\r\n  //\r\n  // option to pass `{viewComparator: compFunction()}` to allow the `CollectionView`\r\n  // to use a custom sort order for the collection.\r\n  constructor(options) {\r\n    this.render = _.bind(this.render, this);\r\n\r\n    this._setOptions(options);\r\n\r\n    this.mergeOptions(options, ClassOptions);\r\n\r\n    monitorViewEvents(this);\r\n\r\n    this._initBehaviors();\r\n    this.once('render', this._initialEvents);\r\n    this._initChildViewStorage();\r\n    this._bufferedChildren = [];\r\n\r\n    const args = Array.prototype.slice.call(arguments);\r\n    args[0] = this.options;\r\n    Backbone.View.prototype.constructor.apply(this, args);\r\n\r\n    this.delegateEntityEvents();\r\n  },\r\n\r\n  // Instead of inserting elements one by one into the page, it's much more performant to insert\r\n  // elements into a document fragment and then insert that document fragment into the page\r\n  _startBuffering() {\r\n    this._isBuffering = true;\r\n  },\r\n\r\n  _endBuffering() {\r\n    const shouldTriggerAttach = !!this._isAttached;\r\n    const triggerOnChildren = shouldTriggerAttach ? this._getImmediateChildren() : [];\r\n\r\n    this._isBuffering = false;\r\n\r\n    _.each(triggerOnChildren, child => {\r\n      triggerMethodOn(child, 'before:attach', child);\r\n    });\r\n\r\n    this.attachBuffer(this, this._createBuffer());\r\n\r\n    _.each(triggerOnChildren, child => {\r\n      child._isAttached = true;\r\n      triggerMethodOn(child, 'attach', child);\r\n    });\r\n\r\n    this._bufferedChildren = [];\r\n  },\r\n\r\n  _getImmediateChildren() {\r\n    return _.values(this.children._views);\r\n  },\r\n\r\n  // Configured the initial events that the collection view binds to.\r\n  _initialEvents() {\r\n    if (this.collection) {\r\n      this.listenTo(this.collection, 'add', this._onCollectionAdd);\r\n      this.listenTo(this.collection, 'update', this._onCollectionUpdate);\r\n      this.listenTo(this.collection, 'reset', this.render);\r\n\r\n      if (this.sort) {\r\n        this.listenTo(this.collection, 'sort', this._sortViews);\r\n      }\r\n    }\r\n  },\r\n\r\n  // Handle a child added to the collection\r\n  _onCollectionAdd(child, collection, opts) {\r\n    // `index` is present when adding with `at` since BB 1.2; indexOf fallback for < 1.2\r\n    let index = opts.at !== undefined && (opts.index || collection.indexOf(child));\r\n\r\n    // When filtered or when there is no initial index, calculate index.\r\n    if (this.filter || index === false) {\r\n      index = _.indexOf(this._filteredSortedModels(index), child);\r\n    }\r\n\r\n    if (this._shouldAddChild(child, index)) {\r\n      this._destroyEmptyView();\r\n      this._addChild(child, index)\r\n    }\r\n  },\r\n\r\n  // Handle collection update model removals\r\n  _onCollectionUpdate(collection, options) {\r\n    const changes = options.changes;\r\n    this._removeChildModels(changes.removed);\r\n  },\r\n\r\n  // Remove the child views and destroy them.\r\n  // This function also updates the indices of later views\r\n  // in the collection in order to keep the children in sync with the collection.\r\n  // \"models\" is an array of models and the corresponding views\r\n  // will be removed and destroyed from the CollectionView\r\n  _removeChildModels(models) {\r\n    // Used to determine where to update the remaining\r\n    // sibling view indices after these views are removed.\r\n    const removedViews = this._getRemovedViews(models);\r\n\r\n    if (!removedViews.length) {\r\n      return;\r\n    }\r\n\r\n    this.children._updateLength();\r\n\r\n    // decrement the index of views after this one\r\n    this._updateIndices(removedViews, false);\r\n\r\n    if (this.isEmpty()) {\r\n      this._showEmptyView();\r\n    }\r\n  },\r\n\r\n  // Returns the views that will be used for re-indexing\r\n  // through CollectionView#_updateIndices.\r\n  _getRemovedViews(models) {\r\n\r\n    // Returning a view means something was removed.\r\n    return _.reduce(models, (removingViews, model) => {\r\n      const view = model && this.children.findByModel(model);\r\n\r\n      if (!view || view._isDestroyed) {\r\n        return removingViews;\r\n      }\r\n\r\n      this._removeChildView(view);\r\n\r\n      removingViews.push(view);\r\n\r\n      return removingViews;\r\n    }, []);\r\n  },\r\n\r\n  _removeChildView(view) {\r\n    this.triggerMethod('before:remove:child', this, view);\r\n\r\n    this.children._remove(view);\r\n    if (view.destroy) {\r\n      view.destroy();\r\n    } else {\r\n      destroyBackboneView(view);\r\n    }\r\n\r\n    this.stopListening(view);\r\n    this.triggerMethod('remove:child', this, view);\r\n  },\r\n\r\n  // Overriding Backbone.View's `setElement` to handle\r\n  // if an el was previously defined. If so, the view might be\r\n  // attached on setElement.\r\n  setElement() {\r\n    const hasEl = !!this.el;\r\n\r\n    Backbone.View.prototype.setElement.apply(this, arguments);\r\n\r\n    if (hasEl) {\r\n      this._isAttached = isNodeAttached(this.el);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  // Render children views. Override this method to provide your own implementation of a\r\n  // render function for the collection view.\r\n  render() {\r\n    if (this._isDestroyed) { return this; }\r\n    this.triggerMethod('before:render', this);\r\n    this._renderChildren();\r\n    this._isRendered = true;\r\n    this.triggerMethod('render', this);\r\n    return this;\r\n  },\r\n\r\n  // An efficient rendering used for filtering. Instead of modifying the whole DOM for the\r\n  // collection view, we are only adding or removing the related childrenViews.\r\n  setFilter(filter, {preventRender} = {}) {\r\n    const canBeRendered = this._isRendered && !this._isDestroyed;\r\n    const filterChanged = this.filter !== filter;\r\n    const shouldRender = canBeRendered && filterChanged && !preventRender;\r\n\r\n    if (shouldRender) {\r\n      const previousModels = this._filteredSortedModels();\r\n      this.filter = filter;\r\n      const models = this._filteredSortedModels();\r\n      this._applyModelDeltas(models, previousModels);\r\n    } else {\r\n      this.filter = filter;\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  // `removeFilter` is actually an alias for removing filters.\r\n  removeFilter(options) {\r\n    return this.setFilter(null, options);\r\n  },\r\n\r\n  // Calculate and apply difference by cid between `models` and `previousModels`.\r\n  _applyModelDeltas(models, previousModels) {\r\n    const currentIds = {};\r\n    _.each(models, (model, index) => {\r\n      const addedChildNotExists = !this.children.findByModel(model);\r\n      if (addedChildNotExists) {\r\n        this._onCollectionAdd(model, this.collection, {at: index});\r\n      }\r\n      currentIds[model.cid] = true;\r\n    });\r\n\r\n    const removeModels = _.filter(previousModels, (prevModel) => {\r\n      return !currentIds[prevModel.cid] && this.children.findByModel(prevModel);\r\n    });\r\n\r\n    this._removeChildModels(removeModels);\r\n  },\r\n\r\n  // Reorder DOM after sorting. When your element's rendering do not use their index,\r\n  // you can pass reorderOnSort: true to only reorder the DOM after a sort instead of\r\n  // rendering all the collectionView.\r\n  reorder() {\r\n    const children = this.children;\r\n    const models = this._filteredSortedModels();\r\n\r\n    if (!models.length && this._showingEmptyView) { return this; }\r\n\r\n    const anyModelsAdded = _.some(models, function(model) {\r\n      return !children.findByModel(model);\r\n    });\r\n\r\n    // If there are any new models added due to filtering we need to add child views,\r\n    // so render as normal.\r\n    if (anyModelsAdded) {\r\n      this.render();\r\n    } else {\r\n\r\n      const filteredOutModels = [];\r\n\r\n      // Get the DOM nodes in the same order as the models and\r\n      // find the model that were children before but aren't in this new order.\r\n      const elsToReorder = children.reduce(function(viewEls, view) {\r\n        const index = _.indexOf(models, view.model);\r\n\r\n        if (index === -1) {\r\n          filteredOutModels.push(view.model);\r\n          return viewEls;\r\n        }\r\n\r\n        view._index = index;\r\n\r\n        viewEls[index] = view.el;\r\n\r\n        return viewEls;\r\n      }, new Array(models.length));\r\n\r\n      this.triggerMethod('before:reorder', this);\r\n\r\n      // Since append moves elements that are already in the DOM, appending the elements\r\n      // will effectively reorder them.\r\n      this._appendReorderedChildren(elsToReorder);\r\n\r\n      // remove any views that have been filtered out\r\n      this._removeChildModels(filteredOutModels);\r\n\r\n      this.triggerMethod('reorder', this);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  // Render view after sorting. Override this method to change how the view renders\r\n  // after a `sort` on the collection.\r\n  resortView() {\r\n    if (this.reorderOnSort) {\r\n      this.reorder();\r\n    } else {\r\n      this._renderChildren();\r\n    }\r\n    return this;\r\n  },\r\n\r\n  // Internal method. This checks for any changes in the order of the collection.\r\n  // If the index of any view doesn't match, it will render.\r\n  _sortViews() {\r\n    const models = this._filteredSortedModels();\r\n\r\n    // check for any changes in sort order of views\r\n    const orderChanged = _.find(models, (item, index) => {\r\n      const view = this.children.findByModel(item);\r\n      return !view || view._index !== index;\r\n    });\r\n\r\n    if (orderChanged) {\r\n      this.resortView();\r\n    }\r\n  },\r\n\r\n  // Internal reference to what index a `emptyView` is.\r\n  _emptyViewIndex: -1,\r\n\r\n  // Internal method. Separated so that CompositeView can append to the childViewContainer\r\n  // if necessary\r\n  _appendReorderedChildren(children) {\r\n    this.appendChildren(this.el, children);\r\n  },\r\n\r\n  // Internal method. Separated so that CompositeView can have more control over events\r\n  // being triggered, around the rendering process\r\n  _renderChildren() {\r\n    if (this._isRendered) {\r\n      this._destroyEmptyView();\r\n      this._destroyChildren();\r\n    }\r\n\r\n    const models = this._filteredSortedModels();\r\n    if (this.isEmpty({processedModels: models})) {\r\n      this._showEmptyView();\r\n    } else {\r\n      this.triggerMethod('before:render:children', this);\r\n      this._startBuffering();\r\n      this._showCollection(models);\r\n      this._endBuffering();\r\n      this.triggerMethod('render:children', this);\r\n    }\r\n  },\r\n\r\n  _createView(model, index) {\r\n    const ChildView = this._getChildView(model);\r\n    const childViewOptions = this._getChildViewOptions(model, index);\r\n    const view = this.buildChildView(model, ChildView, childViewOptions);\r\n    return view;\r\n  },\r\n\r\n  _setupChildView(view, index) {\r\n    monitorViewEvents(view);\r\n\r\n    // set up the child view event forwarding\r\n    this._proxyChildViewEvents(view);\r\n\r\n    if (this.sort) {\r\n      view._index = index;\r\n    }\r\n  },\r\n\r\n  // Internal method to loop through collection and show each child view.\r\n  _showCollection(models) {\r\n    _.each(models, _.bind(this._addChild, this));\r\n    this.children._updateLength();\r\n  },\r\n\r\n  // Allow the collection to be sorted by a custom view comparator\r\n  _filteredSortedModels(addedAt) {\r\n    if (!this.collection || !this.collection.length) { return []; }\r\n\r\n    const viewComparator = this.getViewComparator();\r\n    let models = this.collection.models;\r\n    addedAt = Math.min(Math.max(addedAt, 0), models.length - 1);\r\n\r\n    if (viewComparator) {\r\n      let addedModel;\r\n      // Preserve `at` location, even for a sorted view\r\n      if (addedAt) {\r\n        addedModel = models[addedAt];\r\n        models = models.slice(0, addedAt).concat(models.slice(addedAt + 1));\r\n      }\r\n      models = this._sortModelsBy(models, viewComparator);\r\n      if (addedModel) {\r\n        models.splice(addedAt, 0, addedModel);\r\n      }\r\n    }\r\n\r\n    // Filter after sorting in case the filter uses the index\r\n    models = this._filterModels(models);\r\n\r\n    return models;\r\n  },\r\n\r\n  getViewComparator() {\r\n    return this.viewComparator;\r\n  },\r\n\r\n  // Filter an array of models, if a filter exists\r\n  _filterModels(models) {\r\n    if (this.filter) {\r\n      models = _.filter(models, (model, index) => {\r\n        return this._shouldAddChild(model, index);\r\n      });\r\n    }\r\n    return models;\r\n  },\r\n\r\n  _sortModelsBy(models, comparator) {\r\n    if (typeof comparator === 'string') {\r\n      return _.sortBy(models, (model) => {\r\n        return model.get(comparator);\r\n      });\r\n    } else if (comparator.length === 1) {\r\n      return _.sortBy(models, _.bind(comparator, this));\r\n    } else {\r\n      return _.clone(models).sort(_.bind(comparator, this));\r\n    }\r\n  },\r\n\r\n  // Internal method to show an empty view in place of a collection of child views,\r\n  // when the collection is empty\r\n  _showEmptyView() {\r\n    const EmptyView = this._getEmptyView();\r\n\r\n    if (EmptyView && !this._showingEmptyView) {\r\n      this._showingEmptyView = true;\r\n\r\n      const model = new Backbone.Model();\r\n      let emptyViewOptions =\r\n        this.emptyViewOptions || this.childViewOptions;\r\n      if (_.isFunction(emptyViewOptions)) {\r\n        emptyViewOptions = emptyViewOptions.call(this, model, this._emptyViewIndex);\r\n      }\r\n\r\n      const view = this.buildChildView(model, EmptyView, emptyViewOptions);\r\n\r\n      this.triggerMethod('before:render:empty', this, view);\r\n      this.addChildView(view, 0);\r\n      this.triggerMethod('render:empty', this, view);\r\n    }\r\n  },\r\n\r\n  // Internal method to destroy an existing emptyView instance if one exists. Called when\r\n  // a collection view has been rendered empty, and then a child is added to the collection.\r\n  _destroyEmptyView() {\r\n    if (this._showingEmptyView) {\r\n      this.triggerMethod('before:remove:empty', this);\r\n\r\n      this._destroyChildren();\r\n      delete this._showingEmptyView;\r\n\r\n      this.triggerMethod('remove:empty', this);\r\n    }\r\n  },\r\n\r\n  // Retrieve the empty view class\r\n  _getEmptyView() {\r\n    const emptyView = this.emptyView;\r\n\r\n    if (!emptyView) { return; }\r\n\r\n    return this._getView(emptyView);\r\n  },\r\n\r\n  // Retrieve the `childView` class\r\n  // The `childView` property can be either a view class or a function that\r\n  // returns a view class. If it is a function, it will receive the model that\r\n  // will be passed to the view instance (created from the returned view class)\r\n  _getChildView(child) {\r\n    let childView = this.childView;\r\n\r\n    if (!childView) {\r\n      throw new MarionetteError({\r\n        name: 'NoChildViewError',\r\n        message: 'A \"childView\" must be specified'\r\n      });\r\n    }\r\n\r\n    childView = this._getView(childView, child);\r\n\r\n    if (!childView) {\r\n      throw new MarionetteError({\r\n        name: 'InvalidChildViewError',\r\n        message: '\"childView\" must be a view class or a function that returns a view class'\r\n      });\r\n    }\r\n\r\n    return childView;\r\n  },\r\n\r\n  // First check if the `view` is a view class (the common case)\r\n  // Then check if it's a function (which we assume that returns a view class)\r\n  _getView(view, child) {\r\n    if (view.prototype instanceof Backbone.View || view === Backbone.View) {\r\n      return view;\r\n    } else if (_.isFunction(view)) {\r\n      return view.call(this, child);\r\n    }\r\n  },\r\n\r\n  // Internal method for building and adding a child view\r\n  _addChild(child, index) {\r\n    const view = this._createView(child, index);\r\n    this.addChildView(view, index);\r\n\r\n    return view;\r\n  },\r\n\r\n  _getChildViewOptions(child, index) {\r\n    if (_.isFunction(this.childViewOptions)) {\r\n      return this.childViewOptions(child, index);\r\n    }\r\n\r\n    return this.childViewOptions;\r\n  },\r\n\r\n  // Render the child's view and add it to the HTML for the collection view at a given index.\r\n  // This will also update the indices of later views in the collection in order to keep the\r\n  // children in sync with the collection.\r\n  addChildView(view, index) {\r\n    this.triggerMethod('before:add:child', this, view);\r\n    this._setupChildView(view, index);\r\n\r\n    // Store the child view itself so we can properly remove and/or destroy it later\r\n    if (this._isBuffering) {\r\n      // Add to children, but don't update children's length.\r\n      this.children._add(view);\r\n    } else {\r\n      // increment indices of views after this one\r\n      this._updateIndices(view, true);\r\n      this.children.add(view);\r\n    }\r\n\r\n    this._renderView(view);\r\n\r\n    this._attachView(view, index);\r\n\r\n    this.triggerMethod('add:child', this, view);\r\n\r\n    return view;\r\n  },\r\n\r\n  // Internal method. This decrements or increments the indices of views after the added/removed\r\n  // view to keep in sync with the collection.\r\n  _updateIndices(views, increment) {\r\n    if (!this.sort) {\r\n      return;\r\n    }\r\n\r\n    if (!increment) {\r\n      _.each(_.sortBy(this.children._views, '_index'), (view, index) => {\r\n        view._index = index;\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    const view = _.isArray(views) ? _.max(views, '_index') : views;\r\n\r\n    if (_.isObject(view)) {\r\n      // update the indexes of views after this one\r\n      this.children.each((laterView) => {\r\n        if (laterView._index >= view._index) {\r\n          laterView._index += 1;\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  _renderView(view) {\r\n    if (view._isRendered) {\r\n      return;\r\n    }\r\n\r\n    if (!view.supportsRenderLifecycle) {\r\n      triggerMethodOn(view, 'before:render', view);\r\n    }\r\n\r\n    view.render();\r\n\r\n    if (!view.supportsRenderLifecycle) {\r\n      view._isRendered = true;\r\n      triggerMethodOn(view, 'render', view);\r\n    }\r\n  },\r\n\r\n  _attachView(view, index) {\r\n    // Only trigger attach if already attached and not buffering,\r\n    // otherwise _endBuffering() or Region#show() handles this.\r\n    const shouldTriggerAttach = !view._isAttached && !this._isBuffering && this._isAttached;\r\n\r\n    if (shouldTriggerAttach) {\r\n      triggerMethodOn(view, 'before:attach', view);\r\n    }\r\n\r\n    this.attachHtml(this, view, index);\r\n\r\n    if (shouldTriggerAttach) {\r\n      view._isAttached = true;\r\n      triggerMethodOn(view, 'attach', view);\r\n    }\r\n  },\r\n\r\n  // Build a `childView` for a model in the collection.\r\n  buildChildView(child, ChildViewClass, childViewOptions) {\r\n    const options = _.extend({model: child}, childViewOptions);\r\n    return new ChildViewClass(options);\r\n  },\r\n\r\n  // Remove the child view and destroy it. This function also updates the indices of later views\r\n  // in the collection in order to keep the children in sync with the collection.\r\n  removeChildView(view) {\r\n    if (!view || view._isDestroyed) {\r\n      return view;\r\n    }\r\n\r\n    this._removeChildView(view);\r\n    this.children._updateLength();\r\n    // decrement the index of views after this one\r\n    this._updateIndices(view, false);\r\n    return view;\r\n  },\r\n\r\n  // check if the collection is empty or optionally whether an array of pre-processed models is empty\r\n  isEmpty(options) {\r\n    let models;\r\n    if (_.result(options, 'processedModels')) {\r\n      models = options.processedModels;\r\n    } else {\r\n      models = this.collection ? this.collection.models : [];\r\n      models = this._filterModels(models);\r\n    }\r\n    return models.length === 0;\r\n  },\r\n\r\n  // You might need to override this if you've overridden attachHtml\r\n  attachBuffer(collectionView, buffer) {\r\n    this.appendChildren(collectionView.el, buffer);\r\n  },\r\n\r\n  // Create a fragment buffer from the currently buffered children\r\n  _createBuffer() {\r\n    const elBuffer = this.createBuffer();\r\n    _.each(this._bufferedChildren, (b) => {\r\n      this.appendChildren(elBuffer, b.el);\r\n    });\r\n    return elBuffer;\r\n  },\r\n\r\n  // Append the HTML to the collection's `el`. Override this method to do something other\r\n  // than `.append`.\r\n  attachHtml(collectionView, childView, index) {\r\n    if (collectionView._isBuffering) {\r\n      // buffering happens on reset events and initial renders\r\n      // in order to reduce the number of inserts into the\r\n      // document, which are expensive.\r\n      collectionView._bufferedChildren.splice(index, 0, childView);\r\n    } else {\r\n      // If we've already rendered the main collection, append\r\n      // the new child into the correct order if we need to. Otherwise\r\n      // append to the end.\r\n      if (!collectionView._insertBefore(childView, index)) {\r\n        collectionView._insertAfter(childView);\r\n      }\r\n    }\r\n  },\r\n\r\n  // Internal method. Check whether we need to insert the view into the correct position.\r\n  _insertBefore(childView, index) {\r\n    let currentView;\r\n    const findPosition = this.sort && (index < this.children.length - 1);\r\n    if (findPosition) {\r\n      // Find the view after this one\r\n      currentView = this.children.find((view) => {\r\n        return view._index === index + 1;\r\n      });\r\n    }\r\n\r\n    if (currentView) {\r\n      this.beforeEl(currentView.el, childView.el);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  },\r\n\r\n  // Internal method. Append a view to the end of the $el\r\n  _insertAfter(childView) {\r\n    this.appendChildren(this.el, childView.el);\r\n  },\r\n\r\n  // Internal method to set up the `children` object for storing all of the child views\r\n  _initChildViewStorage() {\r\n    this.children = new ChildViewContainer();\r\n  },\r\n\r\n  // called by ViewMixin destroy\r\n  _removeChildren() {\r\n    this._destroyChildren();\r\n  },\r\n\r\n  // Destroy the child views that this collection view is holding on to, if any\r\n  _destroyChildren(options) {\r\n    if (!this.children.length) {\r\n      return;\r\n    }\r\n\r\n    this.triggerMethod('before:destroy:children', this);\r\n    this.children.each(_.bind(this._removeChildView, this));\r\n    this.children._updateLength();\r\n    this.triggerMethod('destroy:children', this);\r\n  },\r\n\r\n  // Return true if the given child should be shown. Return false otherwise.\r\n  // The filter will be passed (child, index, collection), where\r\n  //  'child' is the given model\r\n  //  'index' is the index of that model in the collection\r\n  //  'collection' is the collection referenced by this CollectionView\r\n  _shouldAddChild(child, index) {\r\n    const filter = this.filter;\r\n    return !_.isFunction(filter) || filter.call(this, child, index, this.collection);\r\n  }\r\n});\r\n\r\n_.extend(CollectionView.prototype, ViewMixin);\r\n\r\nexport default CollectionView;\r\n","// Composite View\r\n// --------------\r\n\r\nimport _ from 'underscore';\r\nimport deprecate from './utils/deprecate';\r\nimport MarionetteError from './error';\r\nimport CollectionView from './collection-view';\r\nimport View from './view';\r\n\r\nconst ClassOptions = [\r\n  'childViewContainer',\r\n  'template',\r\n  'templateContext'\r\n];\r\n\r\n// Used for rendering a branch-leaf, hierarchical structure.\r\n// Extends directly from CollectionView\r\n// @deprecated\r\nconst CompositeView = CollectionView.extend({\r\n\r\n  // Setting up the inheritance chain which allows changes to\r\n  // Marionette.CollectionView.prototype.constructor which allows overriding\r\n  // option to pass '{sort: false}' to prevent the CompositeView from\r\n  // maintaining the sorted order of the collection.\r\n  // This will fallback onto appending childView's to the end.\r\n  constructor(options) {\r\n    deprecate('CompositeView is deprecated. Convert to View at your earliest convenience');\r\n\r\n    this.mergeOptions(options, ClassOptions);\r\n\r\n    CollectionView.prototype.constructor.apply(this, arguments);\r\n  },\r\n\r\n  // Configured the initial events that the composite view\r\n  // binds to. Override this method to prevent the initial\r\n  // events, or to add your own initial events.\r\n  _initialEvents() {\r\n\r\n    // Bind only after composite view is rendered to avoid adding child views\r\n    // to nonexistent childViewContainer\r\n\r\n    if (this.collection) {\r\n      this.listenTo(this.collection, 'add', this._onCollectionAdd);\r\n      this.listenTo(this.collection, 'update', this._onCollectionUpdate);\r\n      this.listenTo(this.collection, 'reset', this.renderChildren);\r\n\r\n      if (this.sort) {\r\n        this.listenTo(this.collection, 'sort', this._sortViews);\r\n      }\r\n    }\r\n  },\r\n\r\n  // Retrieve the `childView` to be used when rendering each of\r\n  // the items in the collection. The default is to return\r\n  // `this.childView` or Marionette.CompositeView if no `childView`\r\n  // has been defined. As happens in CollectionView, `childView` can\r\n  // be a function (which should return a view class).\r\n  _getChildView(child) {\r\n    let childView = this.childView;\r\n\r\n    // for CompositeView, if `childView` is not specified, we'll get the same\r\n    // composite view class rendered for each child in the collection\r\n    // then check if the `childView` is a view class (the common case)\r\n    // finally check if it's a function (which we assume that returns a view class)\r\n    if (!childView) {\r\n      return this.constructor;\r\n    }\r\n\r\n    childView = this._getView(childView, child);\r\n\r\n    if (!childView) {\r\n      throw new MarionetteError({\r\n        name: 'InvalidChildViewError',\r\n        message: '\"childView\" must be a view class or a function that returns a view class'\r\n      });\r\n    }\r\n\r\n    return childView;\r\n  },\r\n\r\n  // Return the serialized model\r\n  serializeData() {\r\n    return this.serializeModel();\r\n  },\r\n\r\n  // Renders the model and the collection.\r\n  render() {\r\n    if (this._isDestroyed) { return this; }\r\n    this._isRendering = true;\r\n    this.resetChildViewContainer();\r\n\r\n    this.triggerMethod('before:render', this);\r\n\r\n    this._renderTemplate();\r\n    this.bindUIElements();\r\n    this.renderChildren();\r\n\r\n    this._isRendering = false;\r\n    this._isRendered = true;\r\n    this.triggerMethod('render', this);\r\n    return this;\r\n  },\r\n\r\n  renderChildren() {\r\n    if (this._isRendered || this._isRendering) {\r\n      CollectionView.prototype._renderChildren.call(this);\r\n    }\r\n  },\r\n\r\n  // You might need to override this if you've overridden attachHtml\r\n  attachBuffer(compositeView, buffer) {\r\n    const $container = this.getChildViewContainer(compositeView);\r\n    this.appendChildren($container, buffer);\r\n  },\r\n\r\n  // Internal method. Append a view to the end of the $el.\r\n  // Overidden from CollectionView to ensure view is appended to\r\n  // childViewContainer\r\n  _insertAfter(childView) {\r\n    const $container = this.getChildViewContainer(this, childView);\r\n    this.appendChildren($container, childView.el);\r\n  },\r\n\r\n  // Internal method. Append reordered childView'.\r\n  // Overidden from CollectionView to ensure reordered views\r\n  // are appended to childViewContainer\r\n  _appendReorderedChildren(children) {\r\n    const $container = this.getChildViewContainer(this);\r\n    this.appendChildren($container, children);\r\n  },\r\n\r\n  // Internal method to ensure an `$childViewContainer` exists, for the\r\n  // `attachHtml` method to use.\r\n  getChildViewContainer(containerView, childView) {\r\n    if (!!containerView.$childViewContainer) {\r\n      return containerView.$childViewContainer;\r\n    }\r\n\r\n    let container;\r\n    const childViewContainer = containerView.childViewContainer;\r\n    if (childViewContainer) {\r\n\r\n      const selector = _.result(containerView, 'childViewContainer');\r\n\r\n      if (selector.charAt(0) === '@' && containerView.ui) {\r\n        container = containerView.ui[selector.substr(4)];\r\n      } else {\r\n        container = this.findEls(selector, containerView.$el);\r\n      }\r\n\r\n      if (container.length <= 0) {\r\n        throw new MarionetteError({\r\n          name: 'ChildViewContainerMissingError',\r\n          message: `The specified \"childViewContainer\" was not found: ${containerView.childViewContainer}`\r\n        });\r\n      }\r\n\r\n    } else {\r\n      container = containerView.$el;\r\n    }\r\n\r\n    containerView.$childViewContainer = container;\r\n    return container;\r\n  },\r\n\r\n  // Internal method to reset the `$childViewContainer` on render\r\n  resetChildViewContainer() {\r\n    if (this.$childViewContainer) {\r\n      this.$childViewContainer = undefined;\r\n    }\r\n  }\r\n});\r\n\r\n// To prevent duplication but allow the best View organization\r\n// Certain View methods are mixed directly into the deprecated CompositeView\r\nconst MixinFromView = _.pick(View.prototype, 'serializeModel', 'getTemplate', '_renderTemplate', 'mixinTemplateContext', 'attachElContent');\r\n_.extend(CompositeView.prototype, MixinFromView);\r\n\r\nexport default CompositeView;\r\n","// Behavior\r\n// --------\r\n\r\n// A Behavior is an isolated set of DOM /\r\n// user interactions that can be mixed into any View.\r\n// Behaviors allow you to blackbox View specific interactions\r\n// into portable logical chunks, keeping your views simple and your code DRY.\r\n\r\nimport _ from 'underscore';\r\nimport getUniqueEventName from './utils/get-unique-event-name';\r\nimport MarionetteObject from './object';\r\nimport DelegateEntityEventsMixin from './mixins/delegate-entity-events';\r\nimport TriggersMixin from './mixins/triggers';\r\nimport UIMixin from './mixins/ui';\r\n\r\nconst ClassOptions = [\r\n  'collectionEvents',\r\n  'events',\r\n  'modelEvents',\r\n  'triggers',\r\n  'ui'\r\n];\r\n\r\nconst Behavior = MarionetteObject.extend({\r\n  cidPrefix: 'mnb',\r\n\r\n  constructor(options, view) {\r\n    // Setup reference to the view.\r\n    // this comes in handle when a behavior\r\n    // wants to directly talk up the chain\r\n    // to the view.\r\n    this.view = view;\r\n    this.defaults = _.clone(_.result(this, 'defaults', {}));\r\n    this._setOptions(this.defaults, options);\r\n    this.mergeOptions(this.options, ClassOptions);\r\n\r\n    // Construct an internal UI hash using\r\n    // the behaviors UI hash and then the view UI hash.\r\n    // This allows the user to use UI hash elements\r\n    // defined in the parent view as well as those\r\n    // defined in the given behavior.\r\n    // This order will help the reuse and share of a behavior\r\n    // between multiple views, while letting a view override a\r\n    // selector under an UI key.\r\n    this.ui = _.extend({}, _.result(this, 'ui'), _.result(view, 'ui'));\r\n\r\n    MarionetteObject.apply(this, arguments);\r\n  },\r\n\r\n  // proxy behavior $ method to the view\r\n  // this is useful for doing jquery DOM lookups\r\n  // scoped to behaviors view.\r\n  $() {\r\n    return this.view.$.apply(this.view, arguments);\r\n  },\r\n\r\n  // Stops the behavior from listening to events.\r\n  // Overrides Object#destroy to prevent additional events from being triggered.\r\n  destroy() {\r\n    this.stopListening();\r\n\r\n    return this;\r\n  },\r\n\r\n  proxyViewProperties() {\r\n    this.$el = this.view.$el;\r\n    this.el = this.view.el;\r\n\r\n    return this;\r\n  },\r\n\r\n  bindUIElements() {\r\n    this._bindUIElements();\r\n\r\n    return this;\r\n  },\r\n\r\n  unbindUIElements() {\r\n    this._unbindUIElements();\r\n\r\n    return this;\r\n  },\r\n\r\n  getUI(name) {\r\n    return this._getUI(name);\r\n  },\r\n\r\n  // Handle `modelEvents`, and `collectionEvents` configuration\r\n  delegateEntityEvents() {\r\n    this._delegateEntityEvents(this.view.model, this.view.collection);\r\n\r\n    return this;\r\n  },\r\n\r\n  undelegateEntityEvents() {\r\n    this._undelegateEntityEvents(this.view.model, this.view.collection);\r\n\r\n    return this;\r\n  },\r\n\r\n  getEvents() {\r\n    // Normalize behavior events hash to allow\r\n    // a user to use the @ui. syntax.\r\n    const behaviorEvents = this.normalizeUIKeys(_.result(this, 'events'));\r\n\r\n    // binds the handler to the behavior and builds a unique eventName\r\n    return _.reduce(behaviorEvents, (events, behaviorHandler, key) => {\r\n      if (!_.isFunction(behaviorHandler)) {\r\n        behaviorHandler = this[behaviorHandler];\r\n      }\r\n      if (!behaviorHandler) { return; }\r\n      key = getUniqueEventName(key);\r\n      events[key] = _.bind(behaviorHandler, this);\r\n      return events;\r\n    }, {});\r\n  },\r\n\r\n  // Internal method to build all trigger handlers for a given behavior\r\n  getTriggers() {\r\n    if (!this.triggers) { return; }\r\n\r\n    // Normalize behavior triggers hash to allow\r\n    // a user to use the @ui. syntax.\r\n    const behaviorTriggers = this.normalizeUIKeys(_.result(this, 'triggers'));\r\n\r\n    return this._getViewTriggers(this.view, behaviorTriggers);\r\n  }\r\n\r\n});\r\n\r\n_.extend(Behavior.prototype, DelegateEntityEventsMixin, TriggersMixin, UIMixin);\r\n\r\nexport default Behavior;\r\n","// Application\r\n// -----------\r\nimport buildRegion from './common/build-region';\r\nimport MarionetteObject from './object';\r\nimport Region from './region';\r\n\r\nconst ClassOptions = [\r\n  'region',\r\n  'regionClass'\r\n];\r\n\r\n// A container for a Marionette application.\r\nconst Application = MarionetteObject.extend({\r\n  cidPrefix: 'mna',\r\n\r\n  constructor(options) {\r\n    this._setOptions(options);\r\n\r\n    this.mergeOptions(options, ClassOptions);\r\n\r\n    this._initRegion();\r\n\r\n    MarionetteObject.prototype.constructor.apply(this, arguments);\r\n  },\r\n\r\n  regionClass: Region,\r\n\r\n  _initRegion() {\r\n    const region = this.region;\r\n\r\n    if (!region) { return; }\r\n\r\n    const defaults = {\r\n      regionClass: this.regionClass\r\n    };\r\n\r\n    this._region = buildRegion(region, defaults);\r\n  },\r\n\r\n  getRegion() {\r\n    return this._region;\r\n  },\r\n\r\n  showView(view, ...args) {\r\n    const region = this.getRegion();\r\n    return region.show(view, ...args);\r\n  },\r\n\r\n  getView() {\r\n    return this.getRegion().currentView;\r\n  },\r\n\r\n  // kick off all of the application's processes.\r\n  start(options) {\r\n    this.triggerMethod('before:start', this, options);\r\n    this.triggerMethod('start', this, options);\r\n    return this;\r\n  }\r\n\r\n});\r\n\r\nexport default Application;\r\n","// App Router\r\n// ----------\r\n\r\n// Reduce the boilerplate code of handling route events\r\n// and then calling a single method on another object,\r\n// called a controller.\r\n// Have your routers configured to call the method on\r\n// your controller, directly.\r\n//\r\n// Configure an AppRouter with `appRoutes`.\r\n//\r\n// App routers can only take one `controller` object.\r\n// It is recommended that you divide your controller\r\n// objects in to smaller pieces of related functionality\r\n// and have multiple routers / controllers, instead of\r\n// just one giant router and controller.\r\n//\r\n// You can also add standard routes to an AppRouter.\r\n\r\nimport Backbone from 'backbone';\r\nimport _ from 'underscore';\r\nimport { triggerMethod } from './common/trigger-method';\r\nimport MarionetteError from './error';\r\nimport CommonMixin from './mixins/common';\r\n\r\nconst ClassOptions = [\r\n  'appRoutes',\r\n  'controller'\r\n];\r\n\r\nconst AppRouter = Backbone.Router.extend({\r\n\r\n  constructor(options) {\r\n    this._setOptions(options);\r\n\r\n    this.mergeOptions(options, ClassOptions);\r\n\r\n    Backbone.Router.apply(this, arguments);\r\n\r\n    const appRoutes = this.appRoutes;\r\n    const controller = this._getController();\r\n    this.processAppRoutes(controller, appRoutes);\r\n    this.on('route', this._processOnRoute, this);\r\n  },\r\n\r\n  // Similar to route method on a Backbone Router but\r\n  // method is called on the controller\r\n  appRoute(route, methodName) {\r\n    const controller = this._getController();\r\n    this._addAppRoute(controller, route, methodName);\r\n    return this;\r\n  },\r\n\r\n  // process the route event and trigger the onRoute\r\n  // method call, if it exists\r\n  _processOnRoute(routeName, routeArgs) {\r\n    // make sure an onRoute before trying to call it\r\n    if (_.isFunction(this.onRoute)) {\r\n      // find the path that matches the current route\r\n      const routePath = _.invert(this.appRoutes)[routeName];\r\n      this.onRoute(routeName, routePath, routeArgs);\r\n    }\r\n  },\r\n\r\n  // Internal method to process the `appRoutes` for the\r\n  // router, and turn them in to routes that trigger the\r\n  // specified method on the specified `controller`.\r\n  processAppRoutes(controller, appRoutes) {\r\n    if (!appRoutes) { return this; }\r\n\r\n    const routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes\r\n\r\n    _.each(routeNames, route => {\r\n      this._addAppRoute(controller, route, appRoutes[route]);\r\n    });\r\n\r\n    return this;\r\n  },\r\n\r\n  _getController() {\r\n    return this.controller;\r\n  },\r\n\r\n  _addAppRoute(controller, route, methodName) {\r\n    const method = controller[methodName];\r\n\r\n    if (!method) {\r\n      throw new MarionetteError(`Method \"${methodName}\" was not found on the controller`);\r\n    }\r\n\r\n    this.route(route, methodName, _.bind(method, controller));\r\n  },\r\n\r\n  triggerMethod: triggerMethod\r\n});\r\n\r\n_.extend(AppRouter.prototype, CommonMixin);\r\n\r\nexport default AppRouter;\r\n","import MarionetteError from '../error';\r\n\r\n// Placeholder method to be extended by the user.\r\n// The method should define the object that stores the behaviors.\r\n// i.e.\r\n//\r\n// ```js\r\n// Marionette.Behaviors.behaviorsLookup: function() {\r\n//   return App.Behaviors\r\n// }\r\n// ```\r\nexport default function behaviorsLookup() {\r\n  throw new MarionetteError({\r\n    message: 'You must define where your behaviors are stored.',\r\n    url: 'marionette.behaviors.md#behaviorslookup'\r\n  });\r\n}\r\n","import Backbone from 'backbone';\r\nimport {version} from '../package.json';\r\n\r\nimport proxy from './utils/proxy';\r\nimport extend from './utils/extend';\r\nimport deprecate from './utils/deprecate';\r\n\r\nimport isNodeAttached from './common/is-node-attached';\r\nimport mergeOptions from './common/merge-options';\r\nimport getOption from './common/get-option';\r\nimport normalizeMethods from './common/normalize-methods';\r\nimport monitorViewEvents from './common/monitor-view-events';\r\n\r\nimport {\r\n  bindEvents,\r\n  unbindEvents\r\n} from './common/bind-events';\r\n\r\nimport {\r\n  bindRequests,\r\n  unbindRequests\r\n} from './common/bind-requests';\r\n\r\nimport {\r\n  triggerMethod,\r\n  triggerMethodOn\r\n} from './common/trigger-method';\r\n\r\n\r\nimport MarionetteObject from './object';\r\nimport TemplateCache from './template-cache';\r\nimport View from './view';\r\nimport CollectionView from './collection-view';\r\nimport CompositeView from './composite-view';\r\nimport Behavior from './behavior';\r\nimport Region from './region';\r\nimport Application from './application';\r\nimport AppRouter from './app-router';\r\nimport MarionetteError from './error';\r\n\r\nimport behaviorsLookup from './config/behaviors-lookup';\r\nimport Renderer from './config/renderer';\r\n\r\nimport {\r\n  FEATURES,\r\n  isEnabled,\r\n  setEnabled\r\n} from './config/features';\r\n\r\nconst previousMarionette = Backbone.Marionette;\r\nconst Marionette = Backbone.Marionette = {};\r\n\r\n// This allows you to run multiple instances of Marionette on the same\r\n// webapp. After loading the new version, call `noConflict()` to\r\n// get a reference to it. At the same time the old version will be\r\n// returned to Backbone.Marionette.\r\nMarionette.noConflict = function() {\r\n  Backbone.Marionette = previousMarionette;\r\n  return this;\r\n};\r\n\r\n// Utilities\r\nMarionette.bindEvents = proxy(bindEvents);\r\nMarionette.unbindEvents = proxy(unbindEvents);\r\nMarionette.bindRequests = proxy(bindRequests);\r\nMarionette.unbindRequests = proxy(unbindRequests);\r\nMarionette.mergeOptions = proxy(mergeOptions);\r\nMarionette.getOption = proxy(getOption);\r\nMarionette.normalizeMethods = proxy(normalizeMethods);\r\nMarionette.extend = extend;\r\nMarionette.isNodeAttached = isNodeAttached;\r\nMarionette.deprecate = deprecate;\r\nMarionette.triggerMethod = proxy(triggerMethod);\r\nMarionette.triggerMethodOn = triggerMethodOn;\r\nMarionette.isEnabled = isEnabled;\r\nMarionette.setEnabled = setEnabled;\r\nMarionette.monitorViewEvents = monitorViewEvents;\r\n\r\nMarionette.Behaviors = {};\r\nMarionette.Behaviors.behaviorsLookup = behaviorsLookup;\r\n\r\n// Classes\r\nMarionette.Application = Application;\r\nMarionette.AppRouter = AppRouter;\r\nMarionette.Renderer = Renderer;\r\nMarionette.TemplateCache = TemplateCache;\r\nMarionette.View = View;\r\nMarionette.CollectionView = CollectionView;\r\nMarionette.CompositeView = CompositeView;\r\nMarionette.Behavior = Behavior;\r\nMarionette.Region = Region;\r\nMarionette.Error = MarionetteError;\r\nMarionette.Object = MarionetteObject;\r\n\r\n// Configuration\r\nMarionette.DEV_MODE = false;\r\nMarionette.FEATURES = FEATURES;\r\nMarionette.VERSION = version;\r\n\r\nexport default Marionette;\r\n"],"names":["proxy","method","context","args","apply","extend","Backbone","Model","deprecate","message","test","_","isObject","prev","next","url","Marionette","DEV_MODE","undefined","_cache","_warn","_console","console","warn","log","noop","arguments","isNodeAttached","el","document","documentElement","contains","parentNode","mergeOptions","options","keys","each","key","option","getOption","optionName","normalizeMethods","hash","reduce","normalizedHash","name","isFunction","splitter","getEventName","match","prefix","eventName","toUpperCase","getOnMethodName","memoize","event","replace","triggerMethod","methodName","call","result","trigger","triggerMethodOn","triggerMethodChildren","view","shouldTrigger","_getImmediateChildren","child","shouldTriggerAttach","_isAttached","shouldAttach","shouldTriggerDetach","shouldDetach","triggerDOMRefresh","_isRendered","handleBeforeAttach","handleAttach","handleBeforeDetach","handleDetach","handleRender","monitorViewEvents","_areViewEventsMonitored","on","errorProps","MarionetteError","Error","version","error","pick","captureStackTrace","urlRoot","bindFromStrings","target","entity","evt","methods","actionName","methodNames","split","iterateEvents","bindings","isString","bindEvents","unbindEvents","iterateReplies","channel","normalizedRadioRequests","bindRequests","unbindRequests","setOptions","_setOptions","channelName","Radio","_channel","radioEvents","radioRequests","_destroyRadio","stopReplying","ClassOptions","MarionetteObject","cid","uniqueId","cidPrefix","_initRadio","initialize","prototype","Events","CommonMixin","RadioMixin","_isDestroyed","stopListening","createDocumentFragment","children","$","append","sibling","before","newEl","oldEl","parent","replaceChild","contents","detach","html","remove","selector","TemplateCache","templateId","cachedTemplate","templateCaches","load","i","length","DomMixin","compiledTemplate","template","loadTemplate","compileTemplate","$template","findEls","rawTemplate","invokeMap","invoke","getBehaviorClass","behaviorClass","Behaviors","behaviorsLookup","parseBehaviors","behaviors","chain","map","BehaviorClass","_options","behavior","nestedBehaviors","concat","flatten","value","_behaviors","_getBehaviors","triggers","_invoke","events","model","collection","_undelegateEntityEvents","modelEvents","collectionEvents","delegateEventSplitter","uniqueName","join","getUniqueEventName","FEATURES","isEnabled","setEnabled","state","buildViewTrigger","triggerDef","shouldPreventDefault","preventDefault","shouldStopPropagation","stopPropagation","normalizeUIKeys","ui","memo","val","normalizedKey","normalizeUIString","uiString","r","slice","normalizeUIValues","properties","isArray","property","propertyVal","uiBindings","_getUIBindings","_uiBindings","_ui","$el","ViewMixin","eventsArg","_proxyBehaviorViewProperties","_buildEventProxies","viewEvents","_getEvents","combinedEvents","_getBehaviorEvents","_getBehaviorTriggers","getTriggers","View","delegateEvents","_getViewTriggers","_delegateEntityEvents","_delegateBehaviorEntityEvents","_undelegateBehaviorEntityEvents","unbindUIElements","removeEl","_removeChildren","_destroyBehaviors","_bindUIElements","_bindBehaviorUIElements","_unbindUIElements","_unbindBehaviorUIElements","_getUI","ret","_triggerEventOnBehaviors","_childViewEvents","_childViewTriggers","listenTo","_childViewEventHandler","childViewEvents","childViewTriggers","childEventName","BehaviorsMixin","DelegateEntityEventsMixin","TriggersMixin","UIMixin","destroyBackboneView","supportsDestroyLifecycle","Region","_initEl","getEl","_ensureElement","_getView","currentView","_isSwappingView","empty","_setupChildView","_renderView","_attachView","_proxyChildViewEvents","_empty","parentView","_parentView","supportsRenderLifecycle","render","shouldReplaceEl","replaceElement","_replaceEl","attachHtml","allowMissingEl","viewOptions","_getViewOptions","_restoreEl","replaceEl","_isReplaced","appendChildren","detachHtml","shouldDestroy","preventDestroy","off","removeView","_detachView","_stopChildViewEvents","destroy","destroyView","detachContents","reset","definition","defaults","buildRegionFromDefinition","opts","buildRegionFromObject","regionClass","RegionClass","omit","regions","_regions","addRegions","isEmpty","_addRegions","regionDefinitions","partial","buildRegion","_addRegion","region","_removeRegion","getRegions","bind","getRegion","clone","show","detachView","Renderer","data","templateFunc","get","_initBehaviors","_initRegions","Array","constructor","delegateEntityEvents","serializeModel","serializeCollection","attributes","hasEl","setElement","bindUIElements","_reInitRegions","_renderTemplate","getTemplate","mixinTemplateContext","serializeData","attachElContent","templateContext","setInnerContent","removeRegions","compact","RegionsMixin","emulateCollection","object","listProperty","list","values","toArray","Container","views","_views","_indexByModel","_indexByCustom","_updateLength","add","customIndex","_add","viewCid","findByModelCid","modelCid","findByCid","index","_remove","some","size","CollectionView","once","_initialEvents","_initChildViewStorage","_bufferedChildren","_isBuffering","triggerOnChildren","attachBuffer","_createBuffer","_onCollectionAdd","_onCollectionUpdate","sort","_sortViews","at","indexOf","filter","_filteredSortedModels","_shouldAddChild","_destroyEmptyView","_addChild","changes","_removeChildModels","removed","models","removedViews","_getRemovedViews","_updateIndices","_showEmptyView","removingViews","findByModel","_removeChildView","push","_renderChildren","preventRender","canBeRendered","filterChanged","shouldRender","previousModels","_applyModelDeltas","setFilter","currentIds","addedChildNotExists","removeModels","prevModel","_showingEmptyView","anyModelsAdded","filteredOutModels","elsToReorder","viewEls","_index","_appendReorderedChildren","reorderOnSort","reorder","orderChanged","find","item","resortView","_destroyChildren","processedModels","_startBuffering","_showCollection","_endBuffering","ChildView","_getChildView","childViewOptions","_getChildViewOptions","buildChildView","addedAt","viewComparator","getViewComparator","Math","min","max","addedModel","_sortModelsBy","splice","_filterModels","comparator","sortBy","EmptyView","_getEmptyView","emptyViewOptions","_emptyViewIndex","addChildView","emptyView","childView","_createView","increment","laterView","ChildViewClass","collectionView","buffer","elBuffer","createBuffer","b","_insertBefore","_insertAfter","findPosition","beforeEl","ChildViewContainer","CompositeView","renderChildren","_isRendering","resetChildViewContainer","compositeView","$container","getChildViewContainer","containerView","$childViewContainer","container","childViewContainer","charAt","substr","MixinFromView","Behavior","behaviorEvents","behaviorHandler","behaviorTriggers","Application","_initRegion","_region","AppRouter","Router","appRoutes","controller","_getController","processAppRoutes","_processOnRoute","route","_addAppRoute","routeName","routeArgs","onRoute","routePath","invert","routeNames","reverse","previousMarionette","noConflict","Object","VERSION"],"mappings":"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"}